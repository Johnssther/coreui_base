{"version":3,"sources":["views/Pages/Login/Login.js","utils/errors.js","api/api.js"],"names":["Login","props","state","inputUsername","inputPassword","errorLogin","auth","localStorage","getItem","loading","onLogin","bind","this","setState","Promise","resolve","reject","API","then","data","username","setItem","JSON","stringify","api_token","history","push","message","error","className","role","md","addonType","type","placeholder","autoComplete","onChange","event","target","value","xs","color","onClick","to","style","width","active","tabIndex","from","Component","handleErrors","response","success","messg","errors","generalErrorApi","Api","host","window","location","URL","API_TOKEN","userLogin","passwordLogin","fetch","method","headers","Accept","body","password","json","responseJson","catch","name","email","password_confirmation","console","log","gasto","cantidad","precio_unidad","precio_total","fecha","user_id","tipogasto_id","parse","id","mes"],"mappings":"iZAMMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,cAAe,GACfC,cAAe,GACfC,YAAY,EACZC,KAAuC,MAAjCC,aAAaC,QAAQ,SAC3BC,SAAS,GAGX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAVE,E,uEAaR,IAAD,OAER,OADAC,KAAKC,SAAS,CAAEJ,SAAS,EAAMJ,YAAY,IACpC,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,IAAIP,QAAQ,EAAKR,MAAMC,cAAe,EAAKD,MAAME,eAC9Cc,MAAK,SAACC,GAEDA,EAAKC,WACPb,aAAac,QAAQ,OAAQC,KAAKC,UAAUJ,IAC5CZ,aAAac,QAAQ,QAASF,EAAKK,WAEnC,EAAKvB,MAAMwB,QAAQC,KAAK,MAGL,gCAAjBP,EAAKQ,SAKP,EAAKd,SAAS,CAAER,YAAY,EAAMI,SAAS,IAE7CM,EAAQI,MACP,SAACS,GACF,EAAKf,SAAS,CAAEJ,SAAS,IACzBO,EAAOY,W,+BAKL,IAAD,OACP,OACE,yBAAKC,UAAU,mCACb,kBAAC,IAAD,MAE8B,IAA1BjB,KAAKV,MAAMG,WACT,yBAAKwB,UAAU,sBAAsBC,KAAK,SAA1C,mCAIA,8BAEJ,kBAAC,IAAD,CAAKD,UAAU,0BACb,kBAAC,IAAD,CAAKE,GAAG,MACkB,IAAvBnB,KAAKV,MAAMO,QACV,kBAAC,IAAD,MAEA,GAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMoB,UAAU,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,iDACA,uBAAGA,UAAU,cAAb,mCACA,kBAAC,IAAD,CAAYA,UAAU,QACpB,kBAAC,IAAD,CAAiBG,UAAU,WACzB,kBAAC,IAAD,KACE,uBAAGH,UAAU,gBAGjB,kBAAC,IAAD,CAAOI,KAAK,OAAOC,YAAY,UAAUC,aAAa,WAAWC,SAAU,SAACC,GAAD,OAAW,EAAKxB,SAAS,CAAEV,cAAekC,EAAMC,OAAOC,YAEpI,kBAAC,IAAD,CAAYV,UAAU,QACpB,kBAAC,IAAD,CAAiBG,UAAU,WACzB,kBAAC,IAAD,KACE,uBAAGH,UAAU,gBAGjB,kBAAC,IAAD,CAAOI,KAAK,WAAWC,YAAY,gBAAaC,aAAa,mBAAmBC,SAAU,SAACC,GAAD,OAAW,EAAKxB,SAAS,CAAET,cAAeiC,EAAMC,OAAOC,YAEnJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,KAEN,kBAAC,IAAD,CAAQC,MAAM,UAAUZ,UAAU,OAAOa,QAAS9B,KAAKF,SAAvD,qBAGF,kBAAC,IAAD,CAAK8B,GAAG,IAAIX,UAAU,cACpB,kBAAC,OAAD,CAAMc,GAAG,aAAT,0BAUV,kBAAC,IAAD,CAAMd,UAAU,4CAA4Ce,MAAO,CAAEC,MAAO,QAC1E,kBAAC,IAAD,CAAUhB,UAAU,eAClB,6BACE,8CACA,4HACA,kBAAC,OAAD,CAAMc,GAAG,aACP,kBAAC,IAAD,CAAQF,MAAM,UAAUZ,UAAU,OAAOiB,QAAM,EAACC,UAAW,GAA3D,8BASK,IAApBnC,KAAKV,MAAMI,MACV,kBAAC,IAAD,CAAU0C,KAAK,IAAIL,GAAG,W,GArHZM,aA4HLjD,a,iCClIf,oEAAO,IAAMkD,EAAe,SAAAC,GAExB,IAAwB,IAArBA,EAASC,QACR,MAAMD,EAGV,GAAIA,EAAU,CACV,IAAIE,EAAQ,CACRD,SAAQ,EACRE,OAAO,qBAEX,GAAiB,+BAAbH,EACA,MAAME,EAEV,MAAMA,IAIDE,EAAkB,SAAAJ,GAC3B,MAAMA,I,uDCTJK,G,kBACF,aAAe,oBACX,IAAIC,EAAOC,OAAOC,SAASF,KACd,mBAATA,IACA7C,KAAKgD,IAAM,sCAEF,yBAATH,IACA7C,KAAKgD,IAAM,mCAGfhD,KAAKiD,UAAYtD,aAAaC,QAAQ,S,oDAIlCsD,EAAWC,GACf,OAAOC,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,SAAqB,CAC7BK,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAM9C,KAAKC,UAAU,CACjBH,SAAU0C,EACVO,SAAUN,MAEf7C,MAAK,SAACiC,GAAD,OAAcA,EAASmB,UAC1BpD,MAAK,SAACqD,GACH,OAAOA,KAEVC,OAAM,SAAA5C,GACH,MAAMA,O,mCAILT,GACT,OAAO6C,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,YAAwB,CAChCK,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAM9C,KAAKC,UAAU,CACjBkD,KAAMtD,EAAKsD,KACXC,MAAOvD,EAAKuD,MACZtD,SAAUD,EAAKC,SACfiD,SAAUlD,EAAKkD,SACfM,sBAAuBxD,EAAKwD,0BAEjCzD,MAAK,SAACiC,GAAD,OAAcA,EAASmB,UAC1BpD,MAAK,SAACqD,GACH,OAAOA,KAEVC,OAAM,SAAA5C,GACH,MAAMA,O,mCAQLT,GAIT,OAHAyD,QAAQC,IAAI1D,EAAM,OAGX6C,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,UAAsB,CAC9BK,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAM9C,KAAKC,UAAU,CACjBC,UAAWZ,KAAKiD,UAChBiB,MAAO3D,EAAK2D,MACZC,SAAU5D,EAAK4D,SACfC,cAAe7D,EAAK6D,cACpBC,aAAc9D,EAAK8D,aACnBC,MAAO/D,EAAK+D,MACZC,QAAShE,EAAKgE,QACdC,aAAcjE,EAAKiE,iBAGxBlE,MAAK,SAACiC,GACL,OAAOA,EAASmB,UAEnBE,OAAM,SAAA5C,GACH,MAAMA,O,kCAKFT,GACR,OAAO6C,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,4BAAgChD,KAAKiD,UAArC,8BACDvC,KAAK+D,MAAM9E,aAAaC,QAAQ,SAAS8E,GADxC,0BAELnE,EAAKoE,MAEPrE,MAAK,SAACiC,GAAD,OAAcA,EAASmB,UAC5BpD,MAAK,SAACqD,GACH,OAAOA,KAEVC,OAAM,SAAC5C,GACJ,MAAMA,O,kCAKNT,GACR,OAAO6C,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,kBAAsBzC,EAAKmE,GAA3B,sBAA2C1E,KAAKiD,UAAhD,oBAAqEvC,KAAK+D,MAAM9E,aAAaC,QAAQ,SAAS8E,KAErHpE,MAAK,SAACiC,GAAD,OAAcA,EAASmB,UAC5BpD,MAAK,SAACqD,GACH,OAAOA,KAEVC,OAAM,SAAC5C,GACJ,MAAMA,O,wCAOd,OAAOoC,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,gCAAoChD,KAAKiD,UAAzC,oBAA8DvC,KAAK+D,MAAM9E,aAAaC,QAAQ,SAAS8E,KAC9GpE,MAAK,SAACiC,GAAD,OAAcA,EAASmB,UAC5BpD,MAAK,SAACqD,GACH,OAAOA,KAEVC,OAAM,SAAC5C,GACJ,MAAMA,O,oCAMJ0D,GAEV,OAAOtB,MAAM,GAAD,OAAIpD,KAAKgD,IAAT,kBAAsB0B,EAAtB,sBAAsC1E,KAAKiD,WAAa,CAChEI,OAAQ,SACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,sBAErBjD,MAAK,SAACiC,GACL,OAAOA,EAASmB,UAEfE,OAAM,SAAA5C,GACH,MAAMA,S,MAOP,QAAI4B","file":"static/js/30.c4f9288a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport API from '../../../api/api'\nimport { LinearProgress } from '@material-ui/core';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputUsername: '',\n      inputPassword: '',\n      errorLogin: false,\n      auth: localStorage.getItem('token') != null ? true : false,\n      loading: false,\n    }\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  onLogin() {\n    this.setState({ loading: true, errorLogin: false })\n    return new Promise((resolve, reject) => {\n      API.onLogin(this.state.inputUsername, this.state.inputPassword)\n        .then((data) => {\n          //Valida si existe un username valido\n          if (data.username) {\n            localStorage.setItem('auth', JSON.stringify(data));\n            localStorage.setItem('token', data.api_token);\n            // localStorage.clear()\n            this.props.history.push('/')\n\n          }\n          if (data.message !== \"The given data was invalid.\") {\n\n            //Valida si el usuario esta o no bloqueado.\n\n          } else {\n            this.setState({ errorLogin: true, loading: false })\n          }\n          resolve(data);\n        }, (error) => {\n          this.setState({ loading: false })\n          reject(error);\n        });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          {\n            this.state.errorLogin === true ?\n              <div className=\"alert alert-warning\" role=\"alert\">\n                Error: Credenciales incorrectas\n                          </div>\n              :\n              <div />\n          }\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              {this.state.loading === true ?\n                <LinearProgress />\n                :\n                ''\n              }\n\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>Iniciar Sesi칩n</h1>\n                      <p className=\"text-muted\">Ingresa si ya tienes una cuenta</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" placeholder=\"Usuario\" autoComplete=\"username\" onChange={(event) => this.setState({ inputUsername: event.target.value })} />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\" placeholder=\"Contrace침a\" autoComplete=\"current-password\" onChange={(event) => this.setState({ inputPassword: event.target.value })} />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          {/* <Link to=\"/\"> */}\n                          <Button color=\"warning\" className=\"px-4\" onClick={this.onLogin}>Iniciar ses칩n</Button>\n                          {/* </Link> */}\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Link to=\"/register\">\n                            Crear una cuenta.\n                          </Link>\n                          {/* <Button color=\"link\" className=\"px-0\">Olvide mi contrace침a</Button> */}\n                        </Col>\n                      </Row>\n\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white bg-warning py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Crea tu cuenta</h2>\n                      <p>Registrate y vive una verdadera experiencia para llevar el control de tus finanzas personales</p>\n                      <Link to=\"/register\">\n                        <Button color=\"warning\" className=\"mt-3\" active tabIndex={-1}>Registrate Ahora!</Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n        {this.state.auth === true &&\n          <Redirect from=\"/\" to=\"/\" />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","export const handleErrors = response => {\n    //errores del api\n    if(response.success === false) {\n        throw response;\n    }\n    //otros errores\n    if (response) {\n        let messg = {\n            success:false,\n            errors:'Error de conexion'\n        }\n        if (response !== \"TypeError: Failed to fetch\") {\n            throw messg;\n        }\n        throw messg;\n    }\n};\n\nexport const generalErrorApi = response => {\n    throw response\n};","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nimport { generalErrorApi } from '../utils/errors';\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n\n\n    /* Expense */\n    saveExpenses(data) {\n        console.log(data, 'joh');\n\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precio_unidad,\n                precio_total: data.precio_total,\n                fecha: data.fecha,\n                user_id: data.user_id,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => { \n            return response.json();\n        })\n        .catch(error => {\n            throw error;\n        });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses(data) {\n        return fetch(`${this.URL}gastos?api_token=${this.API_TOKEN}\n        &user_id=${JSON.parse(localStorage.getItem('auth')).id}\n        &mes=${data.mes}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Show Expense\n    showExpense(data) {\n        return fetch(`${this.URL}gastos/${data.id}?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getExpensesType() {\n        return fetch(`${this.URL}tipogastos?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 5. Elimina los gastos\n    // gastos/85\n    deleteExpense(id) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos/${id}?api_token=${this.API_TOKEN}`, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n"],"sourceRoot":""}