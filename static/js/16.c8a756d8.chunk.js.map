{"version":3,"sources":["api/api.js","views/Gastos/Ingresargastos/Ingresargastos.js"],"names":["Api","Object","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","concat","method","headers","Accept","Content-Type","body","JSON","stringify","username","password","then","response","json","responseJson","catch","error","data","name","email","password_confirmation","api_token","gasto","cantidad","precio_unidad","precioUnidad","precio_total","precioTotal","fecha","Fecha","user_id","id_usuario","tipogasto_id","parse","id","__webpack_exports__","columns","selector","sortable","cell","row","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","style","fontWeight","summary","Ingresargastos","props","_this","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","tipoGasto","newValue","actionMeta","console","log","value","setState","inputTipogasto","state","ingresargastos","gastoTotal","inputFecha","inputCantidad","inputGasto","inputPrecioUnidad","inputPrecioTotal","moment","options","danger","textError","disabledRanges","color","start","end","handleClick","bind","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","addExpenses","toggleDanger","_this2","getGastos","API","getTipogastos","map","item","label","_this3","setTimeout","getExpenses","total","preciounid","Intl","NumberFormat","format","precio","length","Preciototal","reduce","accumulator","currentValue","_this4","saveExpenses","validateForm","_this5","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","isOpen","toggle","className","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_17__","xs","sm","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","react_datepicker2__WEBPACK_IMPORTED_MODULE_8__","backgroundColo","onChange","marginLeft","key","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_23__","type","event","target","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","react_data_table_component__WEBPACK_IMPORTED_MODULE_7___default","title","reactstrap__WEBPACK_IMPORTED_MODULE_24__","href","highlightOnHover","selectableRows","actions","pagination","Component"],"mappings":"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","file":"static/js/16.c8a756d8.chunk.js","sourcesContent":["/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\n\n// import { generalError } from '../services/error'\n// import { AsyncStorage } from 'react-native'\n\n// const API_TOKEN = \"AFF8tI4L4iK1i6exDkExHINKi3RqlrAg9f4sFzsuDwWL4mfMw7hsowmxSDiaCFhKmFpkpxnFgBhWef2V\";\n\n\n\n\n\nclass Api {\n    constructor() {\n        this.URL = \"http://coysa.herokuapp.com/api/\";\n        // this.URL = \"http://localhost/coysa/public/api/\";\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        fetch(`${this.URL}gastos`, {\n\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: localStorage.getItem('token'),\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                user_id: data.id_usuario,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses() {\n        return fetch(`${this.URL}gastos?api_token=${localStorage.getItem('token')}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getTipogastos() {\n        return fetch(`${this.URL}tipogastos?api_token=${localStorage.getItem('token')}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n","import React, { Component } from 'react';\n\n//Componentes de terceros\nimport DataTable from 'react-data-table-component';\nimport { Calendar } from 'react-datepicker2';\nimport moment from 'moment-jalaali'\nimport Select from 'react-select'\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Modal, ModalBody, ModalFooter, ModalHeader,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge\n} from 'reactstrap';\n\n// API\nimport API from '../../../api/api';\n\nconst columns = [\n  {\n    name: 'Fecha',\n    selector: 'fecha',\n    sortable: true,\n    cell: row => <div><div style={{ fontWeight: 700, }}>{row.fecha}</div>{row.summary}</div>,\n\n  },\n  {\n    name: 'Cantidad',\n    selector: 'cantidad',\n    sortable: true,\n  },\n  {\n    name: 'Gasto',\n    selector: 'gasto',\n    sortable: true,\n  },\n  {\n    name: 'Precio Unid.',\n    selector: 'preciounid',\n    sortable: true,\n  },\n  {\n    name: 'Precio Total',\n    selector: 'precio',\n    sortable: true,\n    // right: true,\n  },\n];\n\nclass Ingresargastos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingresargastos: true,\n      data: [],\n      gastoTotal: 0,\n      //Input formulario\n      inputFecha: '',\n      inputCantidad: '',\n      inputGasto: '',\n      inputPrecioUnidad: '',\n      inputPrecioTotal: '',\n      inputTipogasto: '',\n      //Calendario\n      value: moment(),\n      options: [],\n\n      danger: false,\n      textError: '',\n\n    }\n    this.disabledRanges = [\n      {\n        color: 'green',\n        start: moment(),\n        end: moment()\n      },\n    ]\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.handleClick = this.handleClick.bind(this);\n    this.addExpenses = this.addExpenses.bind(this);\n    this.tipoGasto = this.tipoGasto.bind(this);\n    this.toggleDanger = this.toggleDanger.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.getGastos()\n    API.getTipogastos().then((response) => {\n      const options = response.map((item) => {\n        return { value: item.id, label: item.gasto }\n      })\n      this.setState({\n        options,\n      })\n    })\n    //select\n\n\n  }\n\n  getGastos() {\n    this.setState({\n      data: []\n    })\n    setTimeout(() => {\n      API.getExpenses()\n        .then((response) => {\n          console.log(response);\n\n          const total = response.map((item) => {\n            return item.precio_total;\n          })\n          const data = response.map((item) => {\n            return { fecha: item.fecha, cantidad: item.cantidad, gasto: item.gasto, preciounid: '$ ' + new Intl.NumberFormat().format(item.precio_unidad), precio: '$ ' + new Intl.NumberFormat().format(item.precio_total) }\n          })\n\n\n          if (total.length > 0) {\n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n            var Preciototal = total.reduce(reducer);\n          } else {\n            var Preciototal = 0;\n          }\n\n          this.setState({\n            data,\n            gastoTotal: Preciototal,\n          })\n        })\n    }, 500)\n  }\n\n  handleClick() {\n    this.setState({\n      ingresargastos: !this.state.ingresargastos,\n    })\n    this.getGastos()\n  }\n  addExpenses() {\n\n    const data = {\n      gasto: this.state.inputGasto,\n      cantidad: this.state.inputCantidad,\n      precioUnidad: this.state.inputPrecioUnidad,\n      precioTotal: this.state.inputPrecioTotal === '' ? this.state.inputCantidad * this.state.inputPrecioUnidad : this.state.inputPrecioTotal,\n      Fecha: this.state.value.format('YYYY/M/D'),\n      id_usuario: JSON.parse(localStorage.getItem('auth')).id,\n      tipogasto_id: this.state.inputTipogasto,\n      // Fecha: this.state.inputFecha,\n    }\n    const validateForm = (data) => {\n\n      if (data.tipogasto_id === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Debe seleccionar el tipo de gasto' });\n        return false\n      }\n      if (data.gasto === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Debe ingresar un gasto en el campo gasto' });\n        return false\n      }\n      if (data.cantidad === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Ingrese una cantidad' });\n        return false\n      }\n      if (data.precioUnidad === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Ingrese el costo por unidad' });\n        return false\n      }\n\n      API.saveExpenses(data)\n      this.handleClick()\n      return true\n    }\n    validateForm(data)\n\n\n  }\n  tipoGasto = (newValue: any, actionMeta: any) => {\n    console.log(newValue.value);\n    this.setState({\n      inputTipogasto: newValue.value\n    })\n  }\n  toggleDanger() {\n    this.setState({\n      danger: !this.state.danger,\n    });\n    console.log('sesion cerrada');\n\n  }\n\n  render() {\n    if (this.state.ingresargastos === true) {\n      return (\n        <Row>\n          <Modal isOpen={this.state.danger} toggle={this.toggleDanger}\n            className={'modal-danger ' + this.props.className}>\n            <ModalHeader toggle={this.toggleDanger}>Error al intentar registrar este gasto</ModalHeader>\n            <ModalBody>\n              {this.state.textError}\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" onClick={this.toggleDanger}>Ok</Button>{' '}\n            </ModalFooter>\n          </Modal>\n\n\n          <Col xs='12' sm='6'>\n            <Card>\n              <CardHeader>\n                <strong>Nuevo gasto</strong> generado\n              </CardHeader>\n              <CardBody>\n                <Calendar\n                  style={{ backgroundColo: 'red' }}\n                  onChange={value => this.setState({ value })}\n                  value={this.state.value}\n                />\n                <h6><strong>Fecha: </strong>{this.state.value.format('YYYY/M/D')}</h6>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <Card>\n              <CardHeader>\n                <strong>Ingresar gastos</strong> diarios    \n                <Button style={{ marginLeft:137 }} key=\"add\" onClick={this.handleClick}>Ver Mis gastos</Button>\n              </CardHeader>\n              <CardBody>\n                <FormGroup>\n                  <Label htmlFor=\"inputFecha\">Fecha</Label>\n                  <Input type=\"text\" id=\"inputFecha\" value={this.state.value.format('YYYY/M/D')} onChange={(event) => this.setState({ inputFecha: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputTipogasto\">Tipo Gasto</Label>\n                  <Select options={this.state.options} onChange={this.tipoGasto} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputGasto\">Gasto</Label>\n                  <Input placeholder='Ingresar Gasto' type=\"text\" id=\"inputGasto\" onChange={(event) => this.setState({ inputGasto: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputCantidad\">Cantidad</Label>\n                  <Input placeholder='Numero Total' type=\"text\" id=\"inputCantidad\" onChange={(event) => this.setState({ inputCantidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioUnidad\">Precio unidad</Label>\n                  <Input placeholder='$ Costo Unidad' type=\"text\" id=\"inputPrecioUnidad\" onChange={(event) => this.setState({ inputPrecioUnidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioTotal\">Precio Total</Label>\n                  <Input placeholder='$ Costo Total (opcional)' type=\"text\" id=\"inputPrecioTotal\" onChange={(event) => this.setState({ inputPrecioTotal: event.target.value })} />\n                </FormGroup>\n                <Button key=\"add\" onClick={this.addExpenses}>Registrar</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <i className=\"fa fa-align-justify\"></i><strong>Gastos diarios</strong>\n          <small> Gastos </small>\n\n        </CardHeader>\n        <CardBody>\n          <DataTable\n            title={<small>Gastos diarios. Total: <Badge className=\"mr-1\" href=\"#\" color=\"danger\">{`$ ${new Intl.NumberFormat().format(this.state.gastoTotal)}`}</Badge></small>}\n            columns={columns}\n            data={this.state.data}\n            highlightOnHover={true}\n            selectableRows\n            actions={<Button key=\"add\" onClick={this.handleClick}>Nuevo</Button>}\n            pagination={true}\n          />\n        </CardBody>\n      </Card >\n    );\n  }\n}\n\nexport default Ingresargastos;"],"sourceRoot":""}