{"version":3,"sources":["views/expenses/moduls/personalexpenses/components/input.js","views/expenses/moduls/personalexpenses/components/main-component.js","views/expenses/moduls/personalexpenses/containers/create.js","api/api.js","redux/actions/configuracion.js","redux/actions/personlexpenses.js","redux/actions/index.js","views/expenses/moduls/personalexpenses/services/personalexpenses.js"],"names":["InputField","label","placeholder","props","useField","field","meta","React","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","className","htmlFor","name","error","onFocus","getExpenses","MainComponent","onCreate","Card","CardHeader","CardBody","initialValues","gasto","cantidad","precio_unidad","precio_total","fecha","tipo_gasto","validationSchema","Yup","min","required","max","positive","onSubmit","values","setSubmitting","type","Create","console","log","Api","host","window","location","this","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","method","headers","Accept","body","JSON","stringify","username","password","then","response","json","responseJson","catch","data","email","password_confirmation","api_token","precioUnidad","precioTotal","Fecha","user_id","id_usuario","tipogasto_id","parse","id","mes","setConfiguracion","payload","setPersonalexpense","setPersonalexpenses","actions","configuracion","personalexpenses","a","API","expenses","store","dispatch"],"mappings":"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","file":"static/js/24.84053e72.chunk.js","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\n\nconst InputField = ({ label, placeholder, ...props }) => {\n    const [field, meta] = useField(props);\n    const [didFocus, setDidFocus] = React.useState(false);\n    const handleFocus = () => setDidFocus(true);\n    const showFeedback =\n        (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={field.name}>{label}</label>\n                <input \n                    className={`form-control ${showFeedback ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}` } \n                    {...field} \n                    {...props}\n                    placeholder={placeholder}\n                    onFocus={handleFocus} \n                />\n                <div className={ `valid-feedback` }>\n                    Completado\n                </div>\n                <div className={ `invalid-feedback` }>\n                    {meta.error}\n                </div>\n        </div>\n    );\n\n};\nexport default InputField","import React, { useState } from 'react';\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n} from 'reactstrap';\nimport { Formik, Form } from 'formik';\nimport InputField from './input';\nimport * as Yup from 'yup';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n//services\nimport { getExpenses } from '../services/personalexpenses'\n\ngetExpenses();\n\nconst MainComponent = (props) => {\n    const { onCreate } = props;\n    return (\n        <div className=\"container\">\n            <Card>\n                <CardHeader>\n                    Ingresar GastoI\n                </CardHeader>\n                <CardBody>\n                    <Formik\n                        initialValues={{ gasto: '', cantidad: '', precio_unidad: '', precio_total: '', fecha: '', tipo_gasto: '' }}\n                        validationSchema={Yup.object({\n                            gasto: Yup.string()\n                                .min(3, 'Un gasto debe tener minimo 3 caracteres.')\n                                .required('El gasto es obligatorio'),\n                            cantidad: Yup.number()\n                                .max(99999, 'La cantidad no puede exceder de 99.999')\n                                .positive('La cantidad no puede ser negativa.')\n                                .required('La cantiad es obligatoria'),\n                            precio_unidad: Yup.number()\n                                .positive('El precio de la unidad no puede ser negativo.')\n                                .required('La cantiad es obligatoria'),\n                            precio_total: Yup.number()\n                                .positive('La cantidad no puede ser negativa.'),\n                            fecha: Yup.date()\n                                .required('La fecha es obligatoria'),\n                            tipo_gasto: Yup.date()\n                                .required('El tipo de gasto es obligatorio'),\n                        })}\n                        onSubmit={(values, { setSubmitting }) => {\n                            onCreate(values);\n                            setSubmitting(true);\n                        }}\n                    >\n                        <Form>\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <InputField name=\"fecha\" type=\"date\" label=\"Fecha\" placeholder=\"Ingrese la fecha.\" />\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <InputField name=\"tipo_gasto\" type=\"text\" label=\"Tipo Gasto\" placeholder=\"Ingrese el tipo de gasto.\" />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-3\">\n                                    <InputField name=\"cantidad\" type=\"text\" label=\"Cantidad\" placeholder=\"Ingrese una cantidad.\" />\n                                </div>\n                                <div className=\"col-sm-9\">\n                                    <InputField name=\"gasto\" type=\"text\" label=\"Gasto\" placeholder=\"Ingrese un gasto.\" />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <InputField name=\"precio_unidad\" type=\"text\" label=\"Precio unid.\" placeholder=\"Ingrese el precio por unidad.\" />\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <InputField name=\"precio_total\" type=\"text\" label=\"Precio total\" placeholder=\"Ingrese el precio total (opcional).\" />\n                                </div>\n                            </div>\n                            <button className=\"btn btn-success btn-sm\" type=\"submit\">Enviar</button>\n                        </Form>\n                    </Formik>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default MainComponent","import  React from 'react';\n\nimport MainComponent from '../components/main-component'\n//services\nimport { getExpenses } from '../services/personalexpenses'\n\ngetExpenses();\n\nfunction Create() {\n    const onCreate = (values) => {\n        console.log(values);\n    }\n\n  return (\n    <MainComponent onCreate={onCreate}/>\n  );\n}\n\nexport default Create","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                user_id: data.id_usuario,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n        .catch(error => {\n            throw error;\n        });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses(data) {\n        return fetch(`${this.URL}gastos?api_token=${ this.API_TOKEN }\n        &user_id=${JSON.parse(localStorage.getItem('auth')).id}\n        &mes=${data.mes}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getTipogastos() {\n        return fetch(`${this.URL}tipogastos?api_token=${ this.API_TOKEN }&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 5. Elimina los gastos\n// gastos/85\ndeleteExpense(id) {\n    // B. Guardar los gastos\n    return fetch(`${this.URL}gastos/${id}?api_token=${ this.API_TOKEN }`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((response) => {\n        return response.json();\n    })\n    .catch(error => {\n        throw error;\n    });\n}\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n","export const setConfiguracion = payload => {\n    return {\n        type: 'SET_CONFIGURACION',\n        payload\n    }\n}","export const setPersonalexpense = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSE',\n        payload\n    }\n}\n\nexport const setPersonalexpenses = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSES',\n        payload\n    }\n}","import * as configuracion from './configuracion'\nimport * as personalexpenses from './personlexpenses'\n\nexport const actions = {\n    configuracion,\n    personalexpenses,\n}","//Llamadas al api\nimport API from '../../../../../api/api';\n\n//redux\nimport { actions } from '../../../../../redux/actions/index';\nimport { store } from '../../../../../store';\n\nexport const getExpenses = async () => {\n    let data = {\n        mes: null,\n    }\n\n    try {\n        const expenses =  await API.getExpenses(data);\n        store.dispatch(actions.personalexpenses.setPersonalexpenses(expenses))\n    } catch (e) {\n        console.log('Ha ocurrido un error');    \n        console.log(e);    \n    }\n}"],"sourceRoot":""}