{"version":3,"sources":["views/Gastos/Ingresargastos/components/datatableShowGastos.js","views/components/Modals/Modals.js","views/Gastos/Ingresargastos/Ingresargastos.js","api/api.js"],"names":["rowTheme","Component","header","borderColor","rows","spacing","spacingBorderRadius","spacingMargin","backgroundColor","height","cells","cellPadding","footer","separatorStyle","columns","cell","row","allowOverflow","button","width","name","selector","sortable","style","fontWeight","fecha","summary","useStyles","makeStyles","theme","root","marginTop","LinearIndeterminate","classes","className","LinearProgress","color","DatatableShowGastos","Card","CardHeader","CardBody","title","this","props","data","gastos","highlightOnHover","actions","Button","key","onClick","handleClick","pagination","customTheme","expandableRows","expandableRowsComponent","expandOnRowClicked","progressPending","loading","progressComponent","progressShowTableHead","Ingresargastos","tipoGasto","newValue","actionMeta","console","log","value","setState","inputTipogasto","state","ingresargastos","gastoTotal","inputFecha","inputCantidad","inputGasto","inputPrecioUnidad","inputPrecioTotal","moment","options","danger","textError","dropdownOpen","Array","fill","disabledRanges","start","end","bind","addExpenses","toggleDanger","toggle","getGastos","API","getTipogastos","then","response","map","item","id","label","gasto","i","newArray","element","index","setTimeout","getExpenses","total","precio_total","cantidad","preciounid","Intl","NumberFormat","format","precio_unidad","precio","length","Preciototal","reduce","accumulator","currentValue","tipogasto_id","precioUnidad","saveExpenses","validateForm","precioTotal","Fecha","id_usuario","JSON","parse","localStorage","getItem","Row","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Col","xs","sm","backgroundColo","onChange","marginLeft","FormGroup","Label","htmlFor","Input","type","event","target","placeholder","href","rel","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","Badge","Api","host","window","location","URL","API_TOKEN","userLogin","passwordLogin","fetch","method","headers","Accept","body","stringify","username","password","json","responseJson","catch","error","email","password_confirmation","api_token","user_id","URLactual"],"mappings":"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","file":"static/js/18.626cc9be.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n//Componentes de terceros\nimport DataTable from 'react-data-table-component';\nimport { Calendar } from 'react-datepicker2';\nimport moment from 'moment-jalaali'\nimport Select from 'react-select'\nimport { LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    FormGroup,\n    Modal, ModalBody, ModalFooter, ModalHeader,\n    Input,\n    Label,\n    Row,\n    Col,\n    Badge,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n    Spinner\n} from 'reactstrap';\n\nimport Modals from '../../../components/Modals/Modals'\n\nconst rowTheme = {\n    header: {\n        borderColor: 'transparent',\n    },\n    rows: {\n        //Propiedades de la tabla\n        spacing: 'spaced',\n        spacingBorderRadius: '50px',\n        spacingMargin: '3px',\n\n        borderColor: 'rgba(0,0,0,.12)',\n        backgroundColor: 'white',\n        height: '52px',\n    },\n    cells: {\n        cellPadding: '48px',\n    },\n    footer: {\n        separatorStyle: 'none',\n    },\n};\n\nconst columns = [\n    {\n        cell: row => <button>eliminar</button>,\n        allowOverflow: true,\n        button: true,\n        width: '56px', // custom width for icon button\n    },\n    {\n        name: 'Fecha',\n        selector: 'fecha',\n        sortable: true,\n        cell: row => <div><div style={{ fontWeight: 700, }}>{row.fecha}</div>{row.summary}</div>,\n\n    },\n    {\n        name: 'Cantidad',\n        selector: 'cantidad',\n        sortable: true,\n    },\n    {\n        name: 'Gasto',\n        selector: 'gasto',\n        sortable: true,\n    },\n    {\n        name: 'Precio Unid.',\n        selector: 'preciounid',\n        sortable: true,\n    },\n    {\n        name: 'Precio Total',\n        selector: 'precio',\n        sortable: true,\n    },\n];\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nconst LinearIndeterminate = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"secondary\"  />\n        </div>\n    );\n};\n\nclass DatatableShowGastos extends Component {\n    render() {\n        return (\n            <Card>\n                <CardHeader>\n                    <i className=\"fa fa-align-justify\"></i><strong>Gastos diarios</strong>\n                    <small> Gastos </small>\n                </CardHeader>\n\n                <CardBody>\n                    <DataTable\n                        title={this.props.title}\n                        columns={columns}\n                        data={this.props.gastos}\n                        highlightOnHover={true}\n                        // actions={<Modals modal='toggle' name='New' />}\n                        actions={<Button key=\"add\" onClick={this.props.handleClick}>Nuevo</Button>}\n                        pagination={true}\n                        customTheme={rowTheme}\n                        expandableRows\n                        expandableRowsComponent={<div>Detalle de los gastos</div>}\n                        expandOnRowClicked\n                        progressPending={this.props.loading}\n                        progressComponent={<LinearIndeterminate />}\n                        progressShowTableHead\n                    />\n                </CardBody>\n            </Card >\n        );\n    }\n\n}\n\nexport default DatatableShowGastos;","import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Col, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\n\nclass Modals extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      large: false,\n      small: false,\n      primary: false,\n      success: false,\n      warning: false,\n      danger: false,\n      info: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.toggleLarge = this.toggleLarge.bind(this);\n    this.toggleSmall = this.toggleSmall.bind(this);\n    this.togglePrimary = this.togglePrimary.bind(this);\n    this.toggleSuccess = this.toggleSuccess.bind(this);\n    this.toggleWarning = this.toggleWarning.bind(this);\n    this.toggleDanger = this.toggleDanger.bind(this);\n    this.toggleInfo = this.toggleInfo.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  }\n\n  toggleLarge() {\n    this.setState({\n      large: !this.state.large,\n    });\n  }\n\n  toggleSmall() {\n    this.setState({\n      small: !this.state.small,\n    });\n  }\n\n  togglePrimary() {\n    this.setState({\n      primary: !this.state.primary,\n    });\n  }\n\n  toggleSuccess() {\n    this.setState({\n      success: !this.state.success,\n    });\n  }\n\n  toggleWarning() {\n    this.setState({\n      warning: !this.state.warning,\n    });\n  }\n\n  toggleDanger() {\n    this.setState({\n      danger: !this.state.danger,\n    });\n  }\n\n  toggleInfo() {\n    this.setState({\n      info: !this.state.info,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        {\n          this.props.modal === 'toggle' ?\n            <Button onClick={this.toggle} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'toggleLarge' ?\n            <Button onClick={this.toggleLarge} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'toggleSmall' ?\n            <Button onClick={this.toggleSmall} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'togglePrimary' ?\n            <Button onClick={this.togglePrimary} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'toggleDanger' ?\n            <Button onClick={this.toggleDanger} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'toggleWarning' ?\n            <Button onClick={this.toggleWarning} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'toggleSuccess' ?\n            <Button onClick={this.toggleSuccess} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {\n          this.props.modal === 'toggleInfo' ?\n            <Button onClick={this.toggleInfo} className=\"mr-1\">{this.props.name}</Button>\n            : ''\n        }\n        {/* buttons */}\n        {/* \n        \n        \n        <Button onClick={this.toggleSmall} className=\"mr-1\">Launch small modal</Button>\n        <Button color=\"primary\" onClick={this.togglePrimary} className=\"mr-1\">Primary modal</Button>\n        <Button color=\"danger\" onClick={this.toggleDanger} className=\"mr-1\">Danger modal</Button>\n        <Button color=\"warning\" onClick={this.toggleWarning} className=\"mr-1\">Warning modal</Button>\n        <Button color=\"success\" onClick={this.toggleSuccess} className=\"mr-1\">Success modal</Button>\n        <Button color=\"info\" onClick={this.toggleInfo} className=\"mr-1\">Info modal</Button> */}\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label htmlFor=\"inputFecha\">Fecha</Label>\n              <Input placeholder='Ingresar Fecha' type=\"text\" id=\"inputGasto\" onChange={(event) => this.setState({ inputGasto: event.target.value })} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"inputGasto\">Gasto</Label>\n              <Input placeholder='Ingresar Gasto' type=\"text\" id=\"inputGasto\" onChange={(event) => this.setState({ inputGasto: event.target.value })} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"inputCantidad\">Cantidad</Label>\n              <Input placeholder='Numero Total' type=\"text\" id=\"inputCantidad\" onChange={(event) => this.setState({ inputCantidad: event.target.value })} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"inputPrecioUnidad\">Precio unidad</Label>\n              <Input placeholder='$ Costo Unidad' type=\"text\" id=\"inputPrecioUnidad\" onChange={(event) => this.setState({ inputPrecioUnidad: event.target.value })} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"inputPrecioTotal\">Precio Total</Label>\n              <Input placeholder='$ Costo Total (opcional)' type=\"text\" id=\"inputPrecioTotal\" onChange={(event) => this.setState({ inputPrecioTotal: event.target.value })} />\n            </FormGroup>\n            <Button key=\"add\" onClick={this.addExpenses}>Registrar</Button>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n\n        <Modal isOpen={this.state.large} toggle={this.toggleLarge}\n          className={'modal-lg ' + this.props.className}>\n          <ModalHeader toggle={this.toggleLarge}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleLarge}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleLarge}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n\n        <Modal isOpen={this.state.small} toggle={this.toggleSmall}\n          className={'modal-sm ' + this.props.className}>\n          <ModalHeader toggle={this.toggleSmall}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleSmall}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleSmall}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.primary} toggle={this.togglePrimary}\n          className={'modal-primary ' + this.props.className}>\n          <ModalHeader toggle={this.togglePrimary}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.togglePrimary}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.togglePrimary}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.success} toggle={this.toggleSuccess}\n          className={'modal-success ' + this.props.className}>\n          <ModalHeader toggle={this.toggleSuccess}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={this.toggleSuccess}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleSuccess}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n\n        <Modal isOpen={this.state.warning} toggle={this.toggleWarning}\n          className={'modal-warning ' + this.props.className}>\n          <ModalHeader toggle={this.toggleWarning}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"warning\" onClick={this.toggleWarning}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleWarning}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.danger} toggle={this.toggleDanger}\n          className={'modal-danger ' + this.props.className}>\n          <ModalHeader toggle={this.toggleDanger}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.toggleDanger}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleDanger}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.info} toggle={this.toggleInfo}\n          className={'modal-info ' + this.props.className}>\n          <ModalHeader toggle={this.toggleInfo}>Modal title</ModalHeader>\n          <ModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n                  </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleInfo}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggleInfo}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div >\n    );\n  }\n}\n\nexport default Modals;\n","import React, { Component } from 'react';\n\n//Componentes de terceros\nimport { Calendar } from 'react-datepicker2';\nimport moment from 'moment-jalaali'\nimport Select from 'react-select'\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Modal, ModalBody, ModalFooter, ModalHeader,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge,\n  Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n} from 'reactstrap';\n\n// Components propios\nimport DatatableShowGastos from './components/datatableShowGastos'\n\n// Peticiones api\nimport API from '../../../api/api';\n\n\nclass Ingresargastos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingresargastos: false,\n      data: [],\n      gastoTotal: 0,\n      //Input formulario\n      inputFecha: '',\n      inputCantidad: '',\n      inputGasto: '',\n      inputPrecioUnidad: '',\n      inputPrecioTotal: '',\n      inputTipogasto: '',\n      //Calendario\n      value: moment(),\n      options: [],\n\n      danger: false,\n      textError: '',\n      loading: true,\n      dropdownOpen: new Array(6).fill(false),\n\n    }\n    this.disabledRanges = [\n      {\n        color: 'green',\n        start: moment(),\n        end: moment()\n      },\n    ]\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.handleClick = this.handleClick.bind(this);\n    this.addExpenses = this.addExpenses.bind(this);\n    this.tipoGasto = this.tipoGasto.bind(this);\n    this.toggleDanger = this.toggleDanger.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.getGastos()\n    API.getTipogastos().then((response) => {\n      const options = response.map((item) => {\n        return { value: item.id, label: item.gasto }\n      })\n      this.setState({\n        options,\n      })\n    })\n  }\n\n  toggle(i) {\n    const newArray = this.state.dropdownOpen.map((element, index) => {\n      return (index === i ? !element : false);\n    });\n    this.setState({\n      dropdownOpen: newArray,\n    });\n  }\n\n  getGastos() {\n    this.setState({\n      data: []\n    })\n    setTimeout(() => {\n      API.getExpenses()\n        .then((response) => {\n          console.log(response);\n\n          const total = response.map((item) => {\n            return item.precio_total;\n          })\n          const data = response.map((item) => {\n            return { fecha: item.fecha, cantidad: item.cantidad, gasto: item.gasto, preciounid: '$ ' + new Intl.NumberFormat().format(item.precio_unidad), precio: '$ ' + new Intl.NumberFormat().format(item.precio_total) }\n          })\n\n\n          if (total.length > 0) {\n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n            var Preciototal = total.reduce(reducer);\n          } else {\n            var Preciototal = 0;\n          }\n\n          this.setState({\n            data,\n            gastoTotal: Preciototal,\n            loading: false,\n          })\n        })\n    }, 500)\n  }\n\n  handleClick() {\n    this.setState({\n      ingresargastos: !this.state.ingresargastos,\n      loading: !this.state.loading,\n    })\n    this.getGastos()\n  }\n  addExpenses() {\n\n    const data = {\n      gasto: this.state.inputGasto,\n      cantidad: this.state.inputCantidad,\n      precioUnidad: this.state.inputPrecioUnidad,\n      precioTotal: this.state.inputPrecioTotal === '' ? this.state.inputCantidad * this.state.inputPrecioUnidad : this.state.inputPrecioTotal,\n      Fecha: this.state.value.format('YYYY/M/D'),\n      id_usuario: JSON.parse(localStorage.getItem('auth')).id,\n      tipogasto_id: this.state.inputTipogasto,\n      // Fecha: this.state.inputFecha,\n    }\n    const validateForm = (data) => {\n\n      if (data.tipogasto_id === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Debe seleccionar el tipo de gasto' });\n        return false\n      }\n      if (data.gasto === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Debe ingresar un gasto en el campo gasto' });\n        return false\n      }\n      if (data.cantidad === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Ingrese una cantidad' });\n        return false\n      }\n      if (data.precioUnidad === '') {\n        this.setState({ danger: !this.state.danger, textError: 'Ingrese el costo por unidad' });\n        return false\n      }\n\n      API.saveExpenses(data)\n      this.handleClick()\n      return true\n    }\n    validateForm(data)\n\n\n  }\n  tipoGasto = (newValue: any, actionMeta: any) => {\n    console.log(newValue.value);\n    this.setState({\n      inputTipogasto: newValue.value\n    })\n  }\n  toggleDanger() {\n    this.setState({\n      danger: !this.state.danger,\n    });\n    console.log('sesion cerrada');\n\n  }\n\n  render() {\n    if (this.state.ingresargastos === true) {\n      return (\n        <Row>\n          <Modal isOpen={this.state.danger} toggle={this.toggleDanger}\n            className={'modal-danger ' + this.props.className}>\n            <ModalHeader toggle={this.toggleDanger}>Error al intentar registrar este gasto</ModalHeader>\n            <ModalBody>\n              {this.state.textError}\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" onClick={this.toggleDanger}>Ok</Button>{' '}\n            </ModalFooter>\n          </Modal>\n\n\n          <Col xs='12' sm='6'>\n            <Card>\n              <CardHeader>\n                <strong>Nuevo gasto</strong> generado\n              </CardHeader>\n              <CardBody>\n                <Calendar\n                  style={{ backgroundColo: 'red' }}\n                  onChange={value => this.setState({ value })}\n                  value={this.state.value}\n                />\n                <h6><strong>Fecha: </strong>{this.state.value.format('YYYY/M/D')}</h6>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <Card>\n              <CardHeader>\n                <strong>Ingresar gastos</strong> diarios\n                <Button style={{ marginLeft: 137 }} key=\"add\" onClick={this.handleClick}>Ver Mis gastos</Button>\n              </CardHeader>\n              <CardBody>\n                <FormGroup>\n                  <Label htmlFor=\"inputFecha\">Fecha</Label>\n                  <Input type=\"text\" id=\"inputFecha\" value={this.state.value.format('YYYY/M/D')} onChange={(event) => this.setState({ inputFecha: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputTipogasto\">Tipo Gasto</Label>\n                  <Select options={this.state.options} onChange={this.tipoGasto} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputGasto\">Gasto</Label>\n                  <Input placeholder='Ingresar Gasto' type=\"text\" id=\"inputGasto\" onChange={(event) => this.setState({ inputGasto: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputCantidad\">Cantidad</Label>\n                  <Input placeholder='Numero Total' type=\"text\" id=\"inputCantidad\" onChange={(event) => this.setState({ inputCantidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioUnidad\">Precio unidad</Label>\n                  <Input placeholder='$ Costo Unidad' type=\"text\" id=\"inputPrecioUnidad\" onChange={(event) => this.setState({ inputPrecioUnidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioTotal\">Precio Total</Label>\n                  <Input placeholder='$ Costo Total (opcional)' type=\"text\" id=\"inputPrecioTotal\" onChange={(event) => this.setState({ inputPrecioTotal: event.target.value })} />\n                </FormGroup>\n                <Button key=\"add\" onClick={this.addExpenses}>Registrar</Button>\n              </CardBody>\n            </Card>\n          </Col>\n          <Card>\n            <CardHeader>\n              <i className=\"fa fa-align-justify\"></i><strong>Dropdowns</strong>\n              <div className=\"card-header-actions\">\n                <a href=\"https://reactstrap.github.io/components/dropdowns/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                  <small className=\"text-muted\">docs</small>\n                </a>\n              </div>\n            </CardHeader>\n\n            {/* botones */}\n            <Dropdown isOpen={this.state.dropdownOpen[0]} toggle={() => {\n              this.toggle(0);\n            }}>\n              <DropdownToggle caret>\n                Acciones\n                  </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Acción</DropdownItem>\n                <DropdownItem>Actualizar</DropdownItem>\n                <DropdownItem>Eliminar</DropdownItem>\n                <DropdownItem>Another Action</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n\n          </Card>\n        </Row>\n      )\n    }\n    const title = <small>Gastos diarios. Total: <Badge className=\"mr-1\" href=\"#\" color=\"danger\">{`$ ${new Intl.NumberFormat().format(this.state.gastoTotal)}`}</Badge></small>\n    return (\n      <DatatableShowGastos\n        gastos={this.state.data}\n        loading={this.state.loading}\n        title={title}\n        handleClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default Ingresargastos;","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        fetch(`${this.URL}gastos`, {\n\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                user_id: data.id_usuario,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses() {\n        var URLactual = window.location;\n        console.log(URLactual, 'oo');\n        return fetch(`${this.URL}gastos?api_token=${ this.API_TOKEN }&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getTipogastos() {\n        return fetch(`${this.URL}tipogastos?api_token=${ this.API_TOKEN }&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n"],"sourceRoot":""}