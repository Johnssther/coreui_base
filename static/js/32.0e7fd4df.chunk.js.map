{"version":3,"sources":["views/components/form/inputCheckbox.js","views/expenses/expensestype/components/main-component.js","views/expenses/expensestype/containers/create.js","utils/errors.js","api/api.js","redux/actions/configuracion.js","redux/actions/personlexpenses.js","redux/actions/index.js","redux/actions/expensestype.js","api/typeexpense/api.js","services/expenses/expensestype.js","views/components/form/inputField.js"],"names":["InputCheckbox","label","props","placeholder","useField","field","meta","className","htmlFor","name","Checkbox","color","touched","error","LoginComponent","onCreate","Container","Card","CardHeader","CardBody","initialValues","tipogastos_name","tipogastos_active","validationSchema","Yup","min","max","required","oneOf","onSubmit","values","setSubmitting","Row","Col","sm","type","size","offset","Button","connect","state","expensestype","createexpense","personalexpenses","personalexpense","dispatch","actions","a","Object","assign","tipogastos_usuario","JSON","parse","localStorage","getItem","id","createExpenseType","console","log","getExpensesType","history","push","handleErrors","response","success","messg","errors","generalErrorApi","Api","host","window","location","this","URL","API_TOKEN","userLogin","passwordLogin","fetch","method","headers","Accept","body","stringify","username","password","then","json","responseJson","catch","data","email","password_confirmation","mes","api_token","gasto","cantidad","precio_unidad","precio_total","fecha","user_id","tipogasto_id","setConfiguracion","payload","setPersonalexpense","setPersonalexpenses","configuracion","setExpensestype","API","expensestypes","store","saveExpenseType","createExpense","InputField","React","useState","didFocus","setDidFocus","showFeedback","value","length","onFocus"],"mappings":"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","file":"static/js/32.0e7fd4df.chunk.js","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useField } from \"formik\";\n\nconst InputCheckbox = ({ label, placeholder, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n        <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n                <label htmlFor={field.name}>{label}</label>\n                <div className=\"form-check\">\n                    <Checkbox\n                        color=\"primary\"\n                        className={`form-check-input ${meta.touched && meta.error ? 'is-invalid' : 'is-valid'}`}\n                        {...field}\n                        {...props}\n                    />\n                    {meta.touched && meta.error ? (\n                        <div className=\"invalid-feedback\">{meta.error}</div>\n                    ) : null}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InputCheckbox","import React from 'react';\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    Container,\n    Button,\n} from 'reactstrap';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport InputField from '../../../components/form/inputField';\nimport InputCheckbox from '../../../components/form/inputCheckbox'\n\nconst LoginComponent = (props) => {\n    const { onCreate } = props;\n\n    return (\n        <Container>\n            <Card>\n                <CardHeader>\n                    Tipo de gasto\n                </CardHeader>\n                <CardBody>\n                    <Formik\n                        initialValues={{\n                            tipogastos_name: 'Gasto de ',\n                            tipogastos_active: true,\n                        }}\n                        validationSchema={Yup.object({\n                            tipogastos_name: Yup.string() \n                                .min(11, 'Un gasto debe tener minimo 10 caracteres.')\n                                .max(30, 'Un gasto debe tener maximo 30 caracteres.')\n                                .required('El gasto es obligatorio'),\n                            tipogastos_active: Yup.boolean()\n                                .required(\"Required\")\n                                .oneOf([true], \"El tipo de gasto debe estar activo .\"),\n                        })}\n                        onSubmit={(values, { setSubmitting }) => {\n                            onCreate(values);\n                            setSubmitting(true);\n                        }}\n                    >\n                        <Form>\n                            <Row>\n                                <Col sm=\"8\">\n                                    <InputField name=\"tipogastos_name\" type=\"text\" label=\"Tipo de Gasto\" placeholder=\"Ingrese un tipo de gasto.\" />\n                                </Col>\n                                <Col sm=\"4\">\n                                    <InputCheckbox name=\"tipogastos_active\" type=\"checkbox\" label=\"Tipo Activo\" />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm={{ size: 6, offset: 4 }}>\n                                    <Button className=\"col col-sm-3 m-1\" type=\"reset\" color=\"secondary\" size=\"sm\">Reset</Button>\n                                    <Button className=\"col col-sm-3 m-1\" type=\"submit\" color=\"dark\" size=\"sm\">Register</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Formik>\n                </CardBody>\n            </Card>\n        </Container>\n    );\n};\n\nexport default LoginComponent","import React from 'react';\n\nimport MainComponent from '../components/main-component'\n//services\nimport { getExpensesType, createExpenseType } from '../../../../services/expenses/expensestype'\n//redux\nimport { connect } from 'react-redux'\n\nfunction Create(props) {\n    const { expensestype } = props\n\n    const onCreate = async (values) => {\n        try {\n            Object.assign(values, { tipogastos_usuario: JSON.parse(localStorage.getItem('auth')).id })\n            await createExpenseType(values) //save expense api\n            console.log(values)\n            await getExpensesType()\n            props.history.push('/expenses/references/expensestype')\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <MainComponent onCreate={onCreate} expensestype={expensestype} />\n    );\n}\n\nconst mapStateToProps = state => ({\n    expensestype: state.expensestype.expensestype,\n    createexpense: state.personalexpenses.personalexpense,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    actions: {\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create)","export const handleErrors = response => {\n    console.log(response);\n    \n    //errores del api\n    if(response.success === false) {\n        throw response;\n    }\n    //otros errores\n    if (response) {\n        let messg = {\n            success:false,\n            errors:'Ocurrio un error inesperado de conexión por favor recargue su navegador nuevamente.'\n        }\n        if (response !== \"TypeError: Failed to fetch\") {\n            throw messg;\n        }\n        throw messg;\n    }\n};\n\nexport const generalErrorApi = response => {\n    throw response\n};","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nimport { generalErrorApi } from '../utils/errors';\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n    getExpenses(data) {\n        return fetch(`${this.URL}gastos?api_token=${this.API_TOKEN}\n        &user_id=${JSON.parse(localStorage.getItem('auth')).id}\n        &mes=${data.mes}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    /* Expense */\n    saveExpenses(data) {\n        console.log(data, 'joh');\n\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precio_unidad,\n                precio_total: data.precio_total,\n                fecha: data.fecha,\n                user_id: data.user_id,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    /* Expense */\n    updateExpense(data) {\n        console.log(data);\n        \n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos/${data.id}`, {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precio_unidad,\n                precio_total: data.precio_total,\n                fecha: data.fecha,\n                user_id: data.user_id,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    // 4. Show Expense\n    showExpense(data) {\n        return fetch(`${this.URL}gastos/${data.id}?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n    // 5. Elimina los gastos\n    // gastos/85\n    deleteExpense(id) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos/${id}?api_token=${this.API_TOKEN}`, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n\n    getExpensesType() {\n        return fetch(`${this.URL}tipogastos?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n","export const setConfiguracion = payload => {\n    return {\n        type: 'SET_CONFIGURACION',\n        payload\n    }\n}","export const setPersonalexpense = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSE',\n        payload\n    }\n}\n\nexport const setPersonalexpenses = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSES',\n        payload\n    }\n}","import * as configuracion from './configuracion'\nimport * as personalexpenses from './personlexpenses'\nimport * as expensestype from './expensestype'\n\nexport const actions = {\n    configuracion,\n    personalexpenses,\n    expensestype,\n}","export const setExpensestype = payload => {\n    return {\n        type: 'SET_EXPENSES_TYPE',\n        payload\n    }\n}","import Api from '../api'\n\nclass ApiTypeExpense {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //index\n    getExpensesType() {\n        return fetch(`${this.URL}tipogastos?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    //store\n    /* Expense */\n    saveExpenseType(data) {\n        console.log(data, 'joh');\n\n        // B. Guardar los gastos\n        return fetch(`${this.URL}tipogastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                tipogastos_name: data.tipogastos_name,\n                tipogastos_active: data.tipogastos_active,\n                tipogastos_usuario: data.tipogastos_usuario,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n\n\n}\nexport default new ApiTypeExpense();\n","//Llamadas al api\nimport API from '../../api/typeexpense/api';\nimport { handleErrors } from '../../utils/errors';\n\n//redux\nimport { actions } from '../../redux/actions/index';\nimport { store } from '../../store';\n\nexport const getExpensesType = async () => {\n    try {\n        const expensestypes = await API.getExpensesType();\n        store.dispatch(actions.expensestype.setExpensestype(expensestypes))\n    } catch (e) {\n        console.log('Ha ocurrido un error');\n        console.log(e);\n    }\n}\n\n//store\nexport const createExpenseType = async (data) => {\n    try {\n        const createExpense = await API.saveExpenseType(data);\n        console.log(createExpense);\n    } catch (e) {\n        handleErrors(e)\n    }\n}","import React from 'react';\nimport { useField } from 'formik';\n\nconst InputField = ({ label, placeholder, ...props }) => {\n    const [field, meta] = useField(props);\n    const [didFocus, setDidFocus] = React.useState(false);\n    const handleFocus = () => setDidFocus(true);\n    const showFeedback =\n        (!!didFocus && field.value.length > 2) || meta.touched;\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={field.name}>{label}</label>\n            <input\n                className={`form-control sm ${showFeedback ? (meta.error ? \"is-invalid\" : \"is-valid\") : \"\"}`}\n                {...field}\n                {...props}\n                placeholder={placeholder}\n                onFocus={handleFocus}\n            />\n            <div className={`valid-feedback`}>\n                Completado\n                </div>\n            <div className={`invalid-feedback`}>\n                {meta.error}\n            </div>\n        </div>\n    );\n};\nexport default InputField"],"sourceRoot":""}