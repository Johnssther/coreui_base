{"version":3,"sources":["utils/errors.js","views/components/loading.js","views/Widgets/Widget02.js","api/dashboard.js","views/Dashboard/gbarras.js","views/Dashboard/Dashboard.js"],"names":["handleErrors","response","console","log","success","messg","errors","generalErrorApi","Loading","className","Widget02","this","props","cssModule","header","mainText","icon","color","footer","link","variant","children","attributes","padding","card","lead","style","classes","mapToCssModules","classNames","Card","CardBody","blockIcon","CardFooter","href","cardFooter","Component","defaultProps","host","window","location","URL","API_TOKEN","localStorage","getItem","fetch","JSON","parse","id","then","json","responseJson","catch","error","Gbarras","state","gastoTotal","mes","CardColumns","CardHeader","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","map","item","precio_total_mes","options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","Dashboard","loading","getExpensesMonths","getExpensesMonth","ApiDashboard","getTotalExpensesMonth","setState","e","getTotalExpensesMonths","mes_nombre","Intl","NumberFormat","format","toString","index","key","anio"],"mappings":"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","file":"static/js/32.b5c5a8b2.chunk.js","sourcesContent":["export const handleErrors = response => {\n    console.log(response);\n    \n    //errores del api\n    if(response.success === false) {\n        throw response;\n    }\n    //otros errores\n    if (response) {\n        let messg = {\n            success:false,\n            errors:'Ocurrio un error inesperado de conexión por favor recargue su navegador nuevamente.'\n        }\n        if (response !== \"TypeError: Failed to fetch\") {\n            throw messg;\n        }\n        throw messg;\n    }\n};\n\nexport const generalErrorApi = response => {\n    throw response\n};","import React from 'react';\nimport './loading.css';\nimport Swal from 'sweetalert2'\n\n\nfunction Loading() {\n\n    return (\n        <>\n            <div className=\"container\">\n\n                <div className=\"row\">\n                    <div className=\"col-md-3 offset-md-4\">\n                        <div className=\"container center-block\">\n\n                            <div className=\"lds-facebook\">\n                                <div></div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                            <h4>Cargando...</h4>\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter } from 'reactstrap';\nimport classNames from 'classnames';\nimport { mapToCssModules } from 'reactstrap/lib/utils';\n\nconst propTypes = {\n  header: PropTypes.string,\n  mainText: PropTypes.string,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  variant: PropTypes.string,\n  footer: PropTypes.bool,\n  link: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  header: '$1,999.50',\n  mainText: 'Income',\n  icon: 'fa fa-cogs',\n  color: 'primary',\n  variant: '0',\n  link: '#',\n};\n\nclass Widget02 extends Component {\n  render() {\n    const { className, cssModule, header, mainText, icon, color, footer, link, children, variant, ...attributes } = this.props;\n\n    // demo purposes only\n    const padding = (variant === '0' ? { card: 'p-3', icon: 'p-3', lead: 'mt-2' } : (variant === '1' ? {\n      card: 'p-0', icon: 'p-4', lead: 'pt-3',\n    } : { card: 'p-0', icon: 'p-4 px-5', lead: 'pt-3' }));\n\n    const card = { style: 'clearfix', color: color, icon: icon, classes: '' };\n    card.classes = mapToCssModules(classNames(className, card.style, padding.card), cssModule);\n\n    const lead = { style: 'h5 mb-0', color: color, classes: '' };\n    lead.classes = classNames(lead.style, 'text-' + card.color, padding.lead);\n\n    const blockIcon = function (icon) {\n      const classes = classNames(icon, 'bg-' + card.color, padding.icon, 'font-2xl mr-3 float-left');\n      return (<i className={classes}></i>);\n    };\n\n    const cardFooter = function () {\n      if (footer) {\n        return (\n          <CardFooter className=\"px-3 py-2\">\n            <a className=\"font-weight-bold font-xs btn-block text-muted\" href={link}>Ver Más\n              <i className=\"fa fa-angle-right float-right font-lg\"></i></a>\n          </CardFooter>\n        );\n      }\n    };\n\n    return (\n      <Card>\n        <CardBody className={card.classes} {...attributes}>\n          {blockIcon(card.icon)}\n          <div className={lead.classes}>{header}</div>\n          <div className=\"text-muted text-uppercase font-weight-bold font-xs\">{mainText}</div>\n        </CardBody>\n        {cardFooter()}\n      </Card>\n    );\n  }\n}\n\nWidget02.propTypes = propTypes;\nWidget02.defaultProps = defaultProps;\n\nexport default Widget02;","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nimport { generalErrorApi } from '../utils/errors';\n\nclass ApiDashboard {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n        if (host === \"http://159.65.226.161:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    getTotalExpensesMonths() {\n        return fetch(`${this.URL}dashboard/totalexpensesmonths?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n    getTotalExpensesMonth() {\n        return fetch(`${this.URL}dashboard/totalexpensesmonth?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new ApiDashboard();\n","\nimport React, { Component } from 'react';\nimport WidgetO from '../Widgets/Widget02'\n// Main Chart\nimport ApiDashboard from '../../api/dashboard';\nimport {\n  Card, CardBody,\n  CardHeader,\n  CardColumns\n} from 'reactstrap';\nimport Loading from '../components/loading'\n\nimport { Bar, Doughnut, Line, Pie, Polar, Radar } from 'react-chartjs-2';\n\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\n\nclass Gbarras extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gastoTotal: '',\n\n    }\n  }\n  componentDidMount() {\n    \n  }\n\n\n  render() {\n    const  mes  = this.props.mes;\n    console.log(mes,'a');\n    \n    return (\n      <>\n        <div className=\"animated fadeIn\">\n          <CardColumns className=\"cols-2\">\n            <Card>\n              <CardHeader>\n                Bar Chart\n              <div className=\"card-header-actions\">\n                  <a href=\"http://www.chartjs.org\" className=\"card-header-action\">\n                    <small className=\"text-muted\">docs</small>\n                  </a>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-wrapper\">\n                  <Bar \n                  data={\n                      {\n                        labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n                        datasets: [\n                          {\n                            label: 'My First dataset',\n                            backgroundColor: 'rgba(17,168,141)',\n                            borderColor: 'rgba(255,99,132,1)',\n                            borderWidth: 1,\n                            hoverBackgroundColor: 'rgba(168,132,8,66)',\n                            hoverBorderColor: 'rgba(255,99,132,1)',\n                            data: mes.map((item)=>item.precio_total_mes),\n                          },\n                        ],\n                      }\n                  } \n                  options={\n                      {\n                        tooltips: {\n                            enabled: false,\n                            custom: CustomTooltips\n                          },\n                          maintainAspectRatio: false\n                      }\n                  } />\n                </div>\n              </CardBody>\n            </Card>\n          </CardColumns>\n        </div>\n      </>\n    );\n  }\n\n}\n\nexport default Gbarras;","\nimport React, { Component } from 'react';\nimport WidgetO from '../Widgets/Widget02'\n// Main Chart\nimport ApiDashboard from '../../api/dashboard';\nimport {\n  Card, CardBody,\n  CardHeader,\n  CardColumns\n} from 'reactstrap';\nimport Loading from '../components/loading'\nimport Gbarras from '../Dashboard/gbarras'\nimport { Bar, Doughnut, Line, Pie, Polar, Radar } from 'react-chartjs-2';\n\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gastoTotal: '',\n      mes: [],\n      loading: true,\n\n    }\n  }\n  componentDidMount() {\n    this.getExpensesMonths()\n    this.getExpensesMonth()\n\n  }\n\n  //getExpenseMont\n  getExpensesMonth() {\n    ApiDashboard.getTotalExpensesMonth()\n      .then((response) => {\n        this.setState({\n          gastoTotal: response,\n          loading: false\n        });\n      })\n      .catch(e => console.log(e))\n  }\n  //getExpenseMonts\n  getExpensesMonths() {\n    ApiDashboard.getTotalExpensesMonths()\n      .then((response) => {\n        this.setState({\n          mes: response,\n          loading: false\n        });\n      })\n      .catch(e => console.log(e))\n  }\n\n\n  render() {\n    let mes_nombre = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre',]\n    if (this.state.loading) {\n      return (\n        <Loading loading={this.state.loading}></Loading>\n      );\n    }\n    return (\n      <>\n        <div className=\"animated fadeIn\">\n          <WidgetO\n            header={'$' + new Intl.NumberFormat().format(this.state.gastoTotal.toString())}\n            mainText='Gastos totales de este mes'\n          />\n        </div>\n        <div className=\"animated fadeIn\">\n          <div>\n            <div className=\"row\">\n              {this.state.mes.map(\n                (item, index) =>\n                  <div className=\"col-sm\" key={index}>\n                    <Card>\n                      <CardHeader className=\"bg-primary\">\n                        <h4> {mes_nombre[item.mes - 1]} {item.anio} </h4>\n                      </CardHeader>\n                      <CardBody className=\"bg-info text-dark\">\n                        Gastos: <h3> {`$ ${new Intl.NumberFormat().format(item.precio_total_mes)}`} </h3>\n                        <hr></hr>\n                      </CardBody>\n                      {/* <CardFooter>\n                          <Button type=\"submit\" size=\"sm\" color=\"primary\"><i className=\"fa fa-dot-circle-o\"></i> Imprimir Gastos</Button>\n                        </CardFooter> */}\n                    </Card>\n                  </div>\n              )\n              }\n\n            </div>\n          </div>\n        </div>\n        <Gbarras mes={this.state.mes} />\n      </>\n    );\n  }\n\n}\n\nexport default Dashboard;"],"sourceRoot":""}