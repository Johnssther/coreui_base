{"version":3,"sources":["redux/reducer/configuracion.js","redux/reducer/personalexpenses.js","redux/reducer/expensestype.js","redux/reducer/index.js","store.js","polyfill.js","App.js","serviceWorker.js","index.js"],"names":["initialState","configuracionUsuario","modalActiva","configuracion","state","action","type","payload","personalexpense","gasto","cantidad","precio_unidad","precio_total","fecha","user_id","tipogasto_id","personalexpenses","expensestype","rootReducer","combineReducers","persistConfig","key","storage","blacklist","persisterReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","Layout","React","lazy","Login","Register","Page404","Page500","App","loading","Suspense","fallback","className","exact","path","name","render","props","Component","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b037b73.chunk.js","sourcesContent":["const initialState = {\n    configuracionUsuario: {\n        modalActiva:true\n    },\n}\n\nfunction configuracion(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_CONFIGURACION':\n            return { configuracionUsuario: action.payload }\n        default:\n            return state;\n    }\n}\nexport default configuracion","const initialState = {\n    personalexpense: {\n        gasto:'',\n        cantidad:'',\n        precio_unidad:'',\n        precio_total:'',\n        fecha:'',\n        user_id:'',\n        tipogasto_id:'',\n    },\n    personalexpenses:[]\n}\n\nfunction personalexpenses(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_PERSONALEXPENSE':\n            return { ...state, personalexpense: action.payload }\n        case 'SET_PERSONALEXPENSES':\n            return { ...state, personalexpenses: action.payload }\n        default:\n            return state;\n    }\n}\nexport default personalexpenses","const initialState = {\n    expensestype:[]\n}\n\nfunction expensestype(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_EXPENSES_TYPE':\n            return { ...state, expensestype: action.payload }\n        default:\n            return state;\n    }\n}\nexport default expensestype","import { combineReducers } from 'redux'\n\n//mis reducers\nimport configuracion from './configuracion'\nimport personalexpenses from './personalexpenses'\nimport expensestype from './expensestype'\n\nconst rootReducer = combineReducers({\n    configuracion,\n    personalexpenses,\n    expensestype,\n})\n\nexport default rootReducer","// para crear el store\nimport { createStore, applyMiddleware } from 'redux' \n//Persistir los datos del store\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './redux/reducer/index'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: [\n        '',\n    ]\n}\n\nconst persisterReducer = persistReducer(persistConfig, rootReducer);\n\n// const store = createStore(persisterReducer, applyMiddleware(logger, thunk));\nconst store = createStore(persisterReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\n\nexport { store, persistor }","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\n//add redux\n//redux \nimport { Provider } from 'react-redux'\nimport { store, persistor } from './store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst Layout = React.lazy(() => import('./containers/Layout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={<div>Cargando...</div>} persistor={persistor}>\n          <HashRouter>\n            <React.Suspense fallback={loading()}>\n              <Switch>\n                <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props} />} />\n                <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props} />} />\n                <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\n                <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\n                <Route path=\"/\" name=\"Home\" render={props => <Layout {...props} />} />\n              </Switch>\n            </React.Suspense>\n          </HashRouter>\n        </PersistGate>\n      </Provider >\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/stable';\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}