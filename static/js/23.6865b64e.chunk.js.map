{"version":3,"sources":["views/Pages/Register/Register.js","api/api.js"],"names":["Register","props","state","name","username","email","password","password_confirmation","name_error","errors_example","validateForm","bind","registerUser","console","log","event","key","target","value","this","setState","data","valid_email","test","minimo_name","length","minimo_username","minimo_password","validForm","API","history","push","className","md","lg","xl","addonType","type","placeholder","autoComplete","onChange","color","block","onClick","Component","Api","host","window","location","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","catch","error","api_token","gasto","cantidad","precio_unidad","precioUnidad","precio_total","precioTotal","fecha","Fecha","user_id","id_usuario","tipogasto_id","parse","id","mes"],"mappings":"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","file":"static/js/23.6865b64e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button, Card, CardBody, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row,\n\n} from 'reactstrap';\nimport API from '../../../api/api'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      //errors\n      name_error: '',\n      errors_example:'',\n    }\n    this.validateForm = this.validateForm.bind(this);\n    this.registerUser = this.registerUser.bind(this);\n  }\n  componentDidMount() {\n    // API.registerUser()\n    console.log('usuario registrado');\n\n  }\n\n  validateForm(event) {\n    let key = event.target.name\n    let value = event.target.value\n    switch (key) {\n      case 'name':\n        this.setState({ name: value })\n        break;\n      case 'username':\n        this.setState({ username: value })\n        break;\n      case 'email':\n        this.setState({ email: value })\n        break;\n      case 'password':\n        this.setState({ password: value })\n        break;\n      case 'password_confirmation':\n        this.setState({ password_confirmation: value })\n        break;\n    }\n  }\n  registerUser() {\n\n    let data = {\n      name: this.state.name,\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirmation: this.state.password_confirmation,\n    }\n\n    const validForm = () => {\n      //validacion de correo\n      let regex = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n      let valid_email = regex.test(data.email) ? true : false;\n      let minimo_name = data.name.length > 4 ? true : false\n      let minimo_username = data.username.length > 4 ? true : false\n      let minimo_password = data.password.length > 7 ? true : false\n      let valid_password = data.password === data.password_confirmation ? true : false\n\n      if (!minimo_name) {\n        this.setState({ errors_example: 'Nombre minimo 4 caracteres'});\n        return false\n      }\n      if (!minimo_username) {\n        this.setState({ errors_example: 'Usuario minimo 4 caracteres'});\n        return false\n      }\n      if (!valid_email) {\n        this.setState({ errors_example: 'Correo invalido'});\n        return false\n      }\n      if (!minimo_password) {\n        this.setState({ errors_example: 'La contraseña debe tener minimo 8 caracteres'});\n        return false\n      }\n      if (!valid_password) {\n        this.setState({ errors_example: 'Las contraseñas con considen'});\n        return false\n      }\n      return true\n    }\n    if (validForm(data) === true) {\n      this.setState({ errors_example: 'Campos validos, puede continuar'});\n      API.registerUser(data)\n      this.props.history.push('/login')\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form>\n                    <h1>Registrate</h1>\n                    <p className=\"text-muted\"></p>Crea tu cuenta\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-user\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" placeholder=\"Ingresa tu Nombre\" autoComplete=\"name\" name='name' onChange={this.validateForm} />\n                    </InputGroup>\n                    <p>{this.state.name_error}</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-user\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" placeholder=\"Ingresa un usuario\" autoComplete=\"username\" name='username' onChange={this.validateForm} />\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>@</InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" placeholder=\"Ingresa correo electrónico\" autoComplete=\"email\" name='email' onChange={this.validateForm} />\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"password\" placeholder=\"Ingresa Contraseña\" autoComplete=\"new-password\" name='password' onChange={this.validateForm} />\n                    </InputGroup>\n                    <InputGroup className=\"mb-4\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"password\" placeholder=\"Repita tu  contraseña\" autoComplete=\"new-password\" name='password_confirmation' onChange={this.validateForm} />\n                    </InputGroup>\n                    <Button color=\"primary\" block onClick={this.registerUser}>Registrarme</Button>\n                    <p>{ this.state.errors_example }</p>\n                  </Form>\n                </CardBody>\n                {/* <CardFooter className=\"p-4\">\n                  <Row>\n                    <Col xs=\"12\" sm=\"6\">\n                      <Button className=\"btn-facebook mb-1\" block><span>facebook</span></Button>\n                    </Col>\n                    <Col xs=\"12\" sm=\"6\">\n                      <Button className=\"btn-twitter mb-1\" block><span>twitter</span></Button>\n                    </Col>\n                  </Row>\n                </CardFooter> */}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                user_id: data.id_usuario,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            console.log('objeto guardado');\n            return response.json();\n        })\n        .catch(error => {\n            throw error;\n        });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses(data) {\n        return fetch(`${this.URL}gastos?api_token=${ this.API_TOKEN }\n        &user_id=${JSON.parse(localStorage.getItem('auth')).id}\n        &mes=${data.mes}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getTipogastos() {\n        return fetch(`${this.URL}tipogastos?api_token=${ this.API_TOKEN }&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 5. Elimina los gastos\n// gastos/85\ndeleteExpense(id) {\n    // B. Guardar los gastos\n    return fetch(`${this.URL}gastos/${id}?api_token=${ this.API_TOKEN }`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((response) => {\n        return response.json();\n    })\n    .catch(error => {\n        throw error;\n    });\n}\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n"],"sourceRoot":""}