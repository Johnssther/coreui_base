{"version":3,"sources":["api/url.js","redux/actions/configuracion.js","redux/actions/personlexpenses.js","redux/actions/revenues.js","redux/actions/index.js","utils/errors.js","redux/actions/expensestype.js","views/components/linearIndeterminate.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","services/revenues/revenues.js","api/revenues/revenues.js","views/budget/budget/components/component/cardbudget.js","views/budget/budget/components/index-component.js","views/budget/budget/containers/index.js"],"names":["connection","host","window","location","URL","API_TOKEN","localStorage","getItem","id","JSON","parse","setConfiguracion","payload","type","setPersonalexpense","setPersonalexpenses","setRevenueIndex","setRevenueStore","setRevenueShow","setRevenueUpdate","setRevenueDelete","actions","configuracion","personalexpenses","expensestype","revenues","handleErrors","response","console","log","success","messg","errors","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","reload","generalErrorApi","setExpensestype","useStyles","makeStyles","theme","root","width","marginTop","spacing","LinearIndeterminate","classes","React","createElement","className","LinearProgress","color","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","serviceIndexRevenues","async","fetch","concat","url","json","indexRevenues","store","dispatch","e","serviceStoreRevenue","method","headers","Accept","body","stringify","api_token","revenue_dt","data","revenue_name","revenue_amount","revenue_description","revenue_saving_percentaje","revenue_user","storeRevenue","CardBudget","props","class","style","mes","TextField","styled","input","_templateObject","ClearButton","Button","_templateObject2","FilterComponent","_ref","filterText","onFilter","onClear","Fragment","placeholder","onChange","onClick","IndexComponent","loading","onNew","setFilterText","useState","resetPaginationToggle","setResetPaginationToggle","filter","item","toLowerCase","includes","useMemo","target","handleClear","Card","CardHeader","CardBody","height","connect","state","indexrevenue","setLoading","useEffect","anyNameFunction","history","push"],"mappings":"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","file":"static/js/25.4b5fda69.chunk.js","sourcesContent":["\n/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://johnalejandro.com\n* link Api\n* http://coysa.herokuapp.com/api/\n*/\n\nexport const connection = () => {\n    const host = window.location.host\n    let URL = null;\n    const API_TOKEN = localStorage.getItem('token');\n\n    if (host === \"localhost:3000\") {\n        URL = \"http://localhost/coysa-laravel6/public/api/\";\n    }\n    if (host === \"johnssther.github.io\") {\n        URL = \"https://x.johnr.top/api/\";\n    }\n    if (host === \"http://159.65.226.161:3000\") {\n        URL = \"http://localhost/coysa-laravel6/public/api/\";\n    }\n\n    URL = \"https://x.johnr.top/api/\";\n\n    return { URL, API_TOKEN }\n};\n\nexport default {\n    URL: connection().URL,\n    API_TOKEN: connection().API_TOKEN,\n    id:JSON.parse(localStorage.getItem('auth')) == null ? null:JSON.parse(localStorage.getItem('auth')).id\n}","export const setConfiguracion = payload => {\n    return {\n        type: 'SET_CONFIGURACION',\n        payload\n    }\n}","export const setPersonalexpense = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSE',\n        payload\n    }\n}\n\nexport const setPersonalexpenses = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSES',\n        payload\n    }\n}","export const setRevenueIndex = payload => {\n    return {\n        type: 'SET_REVENUE_INDEX',\n        payload\n    }\n}\n\nexport const setRevenueStore = payload => {\n    return {\n        type: 'SET_REVENUE_STORE',\n        payload\n    }\n}\n\nexport const setRevenueShow = payload => {\n    return {\n        type: 'SET_REVENUE_SHOW',\n        payload\n    }\n}\n\nexport const setRevenueUpdate = payload => {\n    return {\n        type: 'SET_REVENUE_UPDATE',\n        payload\n    }\n}\n\nexport const setRevenueDelete = payload => {\n    return {\n        type: 'SET_REVENUE_DELETE',\n        payload\n    }\n}","import * as configuracion from './configuracion'\nimport * as personalexpenses from './personlexpenses'\nimport * as expensestype from './expensestype'\nimport * as revenues from './revenues'\n\nexport const actions = {\n    configuracion,\n    personalexpenses,\n    expensestype,\n    revenues,\n}","import Swal from 'sweetalert2'\n\nexport const handleErrors = response => {\n    console.log(response);\n\n    //errores del api\n    if (response.success === false) {\n        throw response;\n    }\n    //otros errores\n    if (response) {\n        let messg = {\n            success: false,\n            errors: 'Ocurrio un error inesperado de conexión por favor recargue su navegador nuevamente.'\n        }\n        Swal.fire({\n            title: 'Atención',\n            text: messg.errors,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, recargar de nuevo'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n\n            }\n        })\n        if (response !== \"TypeError: Failed to fetch\") {\n            throw messg;\n        }\n        throw messg;\n\n    }\n};\n\nexport const generalErrorApi = response => {\n    throw response\n};\n\n/*\nresponseServer: function ( model, resp, opts ) {\n    window.Misc.removeSpinner(this.spinner);\n    if (!_.isUndefined(resp.success)) {\n        // response success or error\n        var text = resp.success ? '' : resp.errors;\n        if (_.isObject(resp.errors)) {\n            text = window.Misc.parseErrors(resp.errors);\n        }\n\n        if (!resp.success) {\n            alertify.error(text);\n            return;\n        }\n\n        window.Misc.redirect(window.Misc.urlFull(Route.route('facturas.show', {facturas: resp.id})));\n    }\n\n       /**\n        * Build URI with route and base url\n        */\n     /*  parseErrors: function ( errors ){\n        var text = '';\n        if( _.isObject( errors ) ){\n\n            var listError = '<ul>';\n\n            $.each(errors, function(field, item) {\n                 listError += '<li>'+ item[0] +'</li>';\n            });\n            listError += '</ul>';\n\n            text = listError;\n        }\n        return text;\n    },\n\n    */","export const setExpensestype = payload => {\n    return {\n        type: 'SET_EXPENSES_TYPE',\n        payload\n    }\n}","import React from 'react'\n\nimport { LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst LinearIndeterminate = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"secondary\" />\n        </div>\n    );\n};\n\n//styles\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default LinearIndeterminate","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import ApiRevenue from '../../api/revenues/revenues';\nimport { indexRevenues, storeRevenue, updateRevenue, showRevenue, destroyRevenue } from '../../api/revenues/revenues';\n\nimport { handleErrors, generalErrorApi } from '../../utils/errors';\nimport { actions } from '../../redux/actions/index';\nimport { store } from '../../store';\n\n/**\n * index\n */\nexport const serviceIndexRevenues = async () => {\n    try {\n        const revenues = await indexRevenues();\n        store.dispatch(actions.revenues.setRevenueIndex(revenues))\n        return true;\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n/**\n * store\n */\nexport const serviceStoreRevenue = async (data) => {\n    try {\n        const response = await storeRevenue(data);\n        \n        if(response.success === false) {\n            generalErrorApi(response)\n        } else {\n            return response;\n        }\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n/**\n * update\n */\nexport const serviceUpdateRevenue = async (data) => {\n    try {\n        const response = await updateRevenue(data);\n        \n        if(response.success === false) {\n            generalErrorApi(response)\n        } else {\n            return response;\n        }\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//show\nexport const serviceShowRevenue = async (data) => {\n    try {\n        const response = await showRevenue(data);\n        console.log('show: ', response);\n        // await store.dispatch(actions.personalexpenses.setPersonalexpense(showExpense))\n        return true\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//delete\nexport const serviceDeleteRevenue = async (data) => {\n    try {\n        const response = await destroyRevenue(data);\n        console.log(response);\n        return true\n    } catch (e) {\n        handleErrors(e)\n    }\n}","import url from '../url';\n\nexport const indexRevenues = async () => {\n    const response = await fetch(`${url.URL}revenues?api_token=${url.API_TOKEN}&user_id=${url.id}`)\n    return await response.json();\n};\n\nexport const storeRevenue = async (data) => {\n    const response = await fetch(`${url.URL}revenues`,\n        {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: url.API_TOKEN,\n                revenue_dt: data.revenue_dt,\n                revenue_name: data.revenue_name,\n                revenue_amount: data.revenue_amount,\n                revenue_description: data.revenue_description,\n                revenue_saving_percentaje: data.revenue_saving_percentaje,\n                revenue_user: url.id,\n            }),\n        },\n    );\n    return await response.json();\n};\n\nexport const updateRevenue = async (data) => {\n    const response = await fetch(`${url.URL}revenues/${data.id}`,\n        {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: url.API_TOKEN,\n                revenue_dt: data.revenue_dt,\n                revenue_name: data.revenue_name,\n                revenue_amount: data.revenue_amount,\n                revenue_description: data.revenue_description,\n                revenue_saving_percentaje: data.revenue_saving_percentaje,\n                revenue_user: url.id,\n            }),\n        },\n    );\n    return await response.json();\n};\n\nexport const showRevenue = async (id) => {\n    const response = await fetch(`${url.URL}revenues/${id}?api_token=${url.API_TOKEN}&user_id=${url.id}`)\n    return await response.json();\n};\n\nexport const destroyRevenue = async (id) => {\n    const response = await fetch(`${url.URL}revenues/${id}?api_token=${url.API_TOKEN}`,\n        {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        },\n    );\n    return await response.json();\n};\n","import React from 'react';\n\nconst CardBudget = (props) => {\n    return (\n        <div class=\"card m-1 text-center\" style={{ width: '18rem' }}>\n            <div class=\"card-body\">\n                <h3 class=\"card-title\">{ props.mes }</h3>\n            </div>\n        </div>\n    );\n};\n\nexport default CardBudget\n","import React from 'react';\n\n//Componentes de terceros\nimport DataTable from 'react-data-table-component';\nimport { Link } from 'react-router-dom';\nimport LinearIndeterminate from '../../../components/linearIndeterminate'\nimport { Card, CardBody, CardHeader, Button } from 'reactstrap';\nimport styled from 'styled-components';\nimport CardBudget from './component/cardbudget';\n\n// DataTables\nconst rowTheme = {\n  header: {\n    borderColor: 'red',\n    backgroundColor: 'primary',\n  },\n  rows: {\n    spacingBorderRadius: '7px',\n    spacingMargin: '1px',\n    backgroundColor: 'white',\n  },\n  cells: {\n  },\n  footer: {\n    separatorStyle: 'none',\n  },\n};\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <>\n    <TextField id=\"search\" type=\"text\" placeholder=\"Browser Expense\" value={filterText} onChange={onFilter} />\n    <ClearButton type=\"button\" onClick={onClear}>X</ClearButton>\n  </>\n);\n\nconst columns = [\n\n  {\n    name: 'Revenue date',\n    selector: 'revenue_dt',\n    wrap: true,\n    sortable: true,\n    cell: row => <div><div style={{ fontWeight: 700, }}>{row.revenue_dt}</div>{row.summary}</div>,\n    grow: 1,\n  },\n  {\n    name: 'Revenue name',\n    selector: 'revenue_name',\n    wrap: true,\n    sortable: true,\n    grow: 2,\n  },\n  {\n    name: 'Revenue amount',\n    selector: 'revenue_amount',\n    sortable: true,\n    grow: 0,\n  },\n  {\n    name: 'Revenue saving percentaje',\n    selector: 'revenue_saving_percentaje',\n    cell: row => <div><div style={{ fontWeight: 700, }}>{row.revenue_saving_percentaje}%</div>{row.summary}</div>,\n    sortable: true,\n  },\n  {\n    name: 'Revenue description',\n    selector: 'revenue_description',\n    wrap: true,\n    sortable: true,\n    grow: 4,\n  },\n  {\n    cell: row => <></>,\n    allowOverflow: true,\n    button: true,\n    width: '56px', // custom width for icon button\n  },\n];\n\nfunction IndexComponent(props) {\n  const { revenues, loading, onNew } = props;\n  const [filterText, setFilterText] = React.useState('');\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n  const filteredItems = revenues.filter(item => item.revenue_description && item.revenue_description.toLowerCase().includes(filterText.toLowerCase()));\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText('');\n      }\n    };\n\n    return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\n  }, [filterText, resetPaginationToggle]);\n\n  console.log(loading);\n\n  return (\n    <Card>\n      <CardHeader>\n        <i className=\"fa fa-align-justify\"></i><strong>My Budget</strong>\n        <small> Budgets </small>\n      </CardHeader>\n      <CardBody className=\"row\">\n        <div class=\"card m-1\" style={{ width: '18rem' }}>\n          <button style={{ height: '100%' }} className=\"btn btn-dark\" onClick={() => { onNew() }} >Add</button>\n        </div>\n        <CardBudget className=\"m-1\" mes=\"Enero 2020\" onClick={() => onNew()} />\n        <CardBudget className=\"m-1\" mes=\"Febrero 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Marzo 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Abril 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Mayo 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Junio 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Julio 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Agosto 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Septiembre 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Octubre 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Noviembre 2020\" />\n        <CardBudget className=\"m-1\" mes=\"Diciembre 2020\" />\n      </CardBody>\n    </Card >\n  );\n}\n\nexport default IndexComponent;","import React, { useEffect, useState } from 'react';\nimport IndexComponent from '../components/index-component'\n\n//redux\nimport { connect } from 'react-redux'\n\n//services\nimport { serviceIndexRevenues } from '../../../../services/revenues/revenues'\n\nfunction Index(props) {\n  const { revenues } = props;\n  const [loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    async function anyNameFunction() {\n      let loading = await serviceIndexRevenues();\n      setLoading(!loading);\n\n    }\n    anyNameFunction()\n  }, [])\n\n  // add new register\n  const onNew = () => {\n    props.history.push('/budget/create')\n  }\n\n  return (\n    <IndexComponent revenues={revenues} onNew={onNew} loading={loading}/>\n  );\n}\n\nconst mapStateToProps = state => ({\n  revenues: state.revenues.indexrevenue,\n})\n\nexport default connect(mapStateToProps)(Index)"],"sourceRoot":""}