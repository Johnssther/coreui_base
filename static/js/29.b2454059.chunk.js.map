{"version":3,"sources":["api/url.js","redux/actions/configuracion.js","redux/actions/personlexpenses.js","redux/actions/revenues.js","redux/actions/index.js","utils/errors.js","redux/actions/expensestype.js","services/expenses/expensestype.js","api/typeexpense/typeexpense.js","views/components/linearIndeterminate.js","views/expenses/expensestype/components/index-component.js","views/expenses/expensestype/containers/index.js"],"names":["connection","host","window","location","URL","API_TOKEN","localStorage","getItem","id","JSON","parse","setConfiguracion","payload","type","setPersonalexpense","setPersonalexpenses","setRevenueIndex","setRevenueStore","setRevenueShow","setRevenueUpdate","setRevenueDelete","actions","configuracion","personalexpenses","expensestype","revenues","handleErrors","response","console","log","success","messg","errors","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","reload","generalErrorApi","setExpensestype","getExpensesType","async","expensestypes","fetch","concat","url","json","getExpensesTyped","store","dispatch","e","createExpenseType","createExpense","method","headers","Accept","body","stringify","api_token","tipogastos_name","data","tipogastos_active","tipogastos_usuario","saveExpenseType","useStyles","makeStyles","theme","root","width","marginTop","spacing","LinearIndeterminate","classes","React","createElement","className","LinearProgress","color","rowTheme","header","borderColor","rows","spacingBorderRadius","spacingMargin","backgroundColor","cells","footer","separatorStyle","columns","name","selector","sortable","cell","row","Link","to","grow","wrap","Fragment","allowOverflow","button","IndexComponent","props","loading","onNew","Card","CardHeader","CardBody","DataTable","Button","onClick","highlightOnHover","pagination","customTheme","progressPending","progressComponent","progressShowTableHead","ignoreRowClick","connect","state","expenses","history","push"],"mappings":"6KASO,MAAMA,EAAaA,KACtB,MAAMC,EAAOC,OAAOC,SAASF,KAC7B,IAAIG,EAAM,KAeV,MAZa,mBAATH,IACAG,EAAM,+CAEG,yBAATH,IACAG,EAAM,4BAEG,+BAATH,IACAG,EAAM,+CAGVA,EAAM,2BAEC,CAAEA,MAAKC,UAdIC,aAAaC,QAAQ,WAiB5B,KACXH,IAAKJ,IAAaI,IAClBC,UAAWL,IAAaK,UACxBG,GAA+C,MAA5CC,KAAKC,MAAMJ,aAAaC,QAAQ,SAAmB,KAAKE,KAAKC,MAAMJ,aAAaC,QAAQ,SAASC,K,4fChCjG,MAAMG,EAAmBC,IACrB,CACHC,KAAM,oBACND,YCHKE,EAAqBF,IACvB,CACHC,KAAM,sBACND,YAIKG,EAAsBH,IACxB,CACHC,KAAM,uBACND,Y,aCVD,MAAMI,EAAkBJ,IACpB,CACHC,KAAM,oBACND,YAIKK,EAAkBL,IACpB,CACHC,KAAM,oBACND,YAIKM,EAAiBN,IACnB,CACHC,KAAM,mBACND,YAIKO,EAAmBP,IACrB,CACHC,KAAM,qBACND,YAIKQ,EAAmBR,IACrB,CACHC,KAAM,qBACND,YC1BKS,EAAU,CACnBC,gBACAC,mBACAC,eACAC,a,iCCTJ,0FAEO,MAAMC,EAAeC,IAIxB,GAHAC,QAAQC,IAAIF,IAGa,IAArBA,EAASG,QACT,MAAMH,EAGV,GAAIA,EAAU,CACV,IAAII,EAAQ,CACRD,SAAS,EACTE,OAAQ,0FAgBZ,GAdAC,IAAKC,KAAK,CACNC,MAAO,cACPC,KAAML,EAAMC,OACZK,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,0BACpBC,KAAMC,IACDA,EAAOC,OACP1C,OAAOC,SAAS0C,WAIP,+BAAblB,EACA,MAAMI,EAEV,MAAMA,IAKDe,EAAkBnB,IAC3B,MAAMA,I,iCCtCV,uDAAO,MAAMoB,EAAkBnC,IACpB,CACHC,KAAM,oBACND,a,iJCGD,MAAMoC,EAAkBC,UAC3B,IACI,IAAIC,OCNoBD,WAC5B,MAAMtB,QAAiBwB,MAAM,GAADC,OAAIC,IAAIjD,IAAG,yBAAAgD,OAAwBC,IAAIhD,UAAS,aAAA+C,OAAYC,IAAI7C,KAC5F,aAAamB,EAAS2B,QDIQC,GAC1BC,IAAMC,SAASpC,IAAQG,aAAauB,gBAAgBG,IACtD,MAAOQ,GACLhC,YAAagC,KAKRC,EAAoBV,UAC7B,IACI,MAAMW,OCZiBX,WAC3B,MAAMtB,QAAiBwB,MAAM,GAADC,OAAIC,IAAIjD,IAAG,cACnC,CACIyD,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMvD,KAAKwD,UAAU,CACjBC,UAAWb,IAAIhD,UACf8D,gBAAiBC,EAAKD,gBACtBE,kBAAmBD,EAAKC,kBACxBC,mBAAoBF,EAAKE,uBAKrC,aAAa3C,EAAS2B,QDLUiB,CAAgBH,GAC5CxC,QAAQC,IAAI+B,GACd,MAAOF,GACLhC,YAAagC,M,iCErBrB,sCAKA,MAWMc,EAAYC,YAAWC,IAAK,CAC9BC,KAAM,CACFC,MAAO,OACP,YAAa,CACTC,UAAWH,EAAMI,QAAQ,QAKtBC,IApBaA,KACxB,MAAMC,EAAUR,IAEhB,OACIS,IAAAC,cAAA,OAAKC,UAAWH,EAAQL,MACpBM,IAAAC,cAACE,IAAc,CAACC,MAAM,iB,oICDlC,MAAMC,EAAW,CACfC,OAAQ,CACNC,YAAa,OAEfC,KAAM,CACJC,oBAAqB,MACrBC,cAAe,MACfC,gBAAiB,SAEnBC,MAAO,GAEPC,OAAQ,CACNC,eAAgB,SAIdC,EAAU,CACd,CACEC,KAAM,OACNC,SAAU,KACVC,UAAU,EACVC,KAAMC,GAAOpB,IAAAC,cAACoB,OAAI,CAACC,GAAE,0CAAAnD,OAA4CiD,EAAI7F,KAAO6F,EAAI7F,IAChFgG,KAAM,GAER,CACEP,KAAM,UACNC,SAAU,QACVO,MAAM,EACNN,UAAU,GAEZ,CACEC,KAAMC,GAAOpB,IAAAC,cAAAD,IAAAyB,SAAA,MACbC,eAAe,EACfC,QAAQ,EACRhC,MAAO,SAiCIiC,MA7Bf,SAAwBC,GACtB,MAAM,cAAE5D,EAAa,QAAE6D,EAAO,MAAEC,GAAUF,EAE1C,OACE7B,IAAAC,cAAC+B,IAAI,KACHhC,IAAAC,cAACgC,IAAU,KACTjC,IAAAC,cAAA,KAAGC,UAAU,wBAA0BF,IAAAC,cAAA,cAAQ,kBAC/CD,IAAAC,cAAA,aAAO,oBAETD,IAAAC,cAACiC,IAAQ,KACPlC,IAAAC,cAACkC,IAAS,CACRjF,MAAO,oBACP6D,QAASA,EACT5B,KAAMlB,EACN7B,QAAS4D,IAAAC,cAACmC,IAAM,CAACpB,KAAK,MAAMqB,QAASN,GAAQ/B,IAAAC,cAAA,KAAGC,UAAU,mBAAqB,OAC/EoC,kBAAkB,EAClBC,YAAY,EACZC,YAAanC,EACboC,gBAAiBX,EACjBY,kBAAmB1C,IAAAC,cAACH,IAAmB,CAACX,KAAMlB,IAC9C0E,uBAAqB,EACrBC,gBAAgB,EAChBnD,MAAM,iB,kBC/DhB1B,cAmBe8E,sBALSC,IAAK,CAC3BC,SAAUD,EAAMxG,iBAAiBA,iBACjC2B,cAAe6E,EAAMvG,aAAaA,eAGrBsG,EAjBf,SAAehB,GACb,MAAM,SAAEkB,EAAQ,cAAE9E,GAAkB4D,EAMpC,OACE7B,IAAAC,cAAC2B,EAAc,CAACmB,SAAUA,EAAU9E,cAAeA,EAAe8D,MALtDA,KACZF,EAAMmB,QAAQC,KAAK","file":"static/js/29.b2454059.chunk.js","sourcesContent":["\n/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://johnalejandro.com\n* link Api\n* http://coysa.herokuapp.com/api/\n*/\n\nexport const connection = () => {\n    const host = window.location.host\n    let URL = null;\n    const API_TOKEN = localStorage.getItem('token');\n\n    if (host === \"localhost:3000\") {\n        URL = \"http://localhost/coysa-laravel6/public/api/\";\n    }\n    if (host === \"johnssther.github.io\") {\n        URL = \"https://x.johnr.top/api/\";\n    }\n    if (host === \"http://159.65.226.161:3000\") {\n        URL = \"http://localhost/coysa-laravel6/public/api/\";\n    }\n\n    URL = \"https://x.johnr.top/api/\";\n\n    return { URL, API_TOKEN }\n};\n\nexport default {\n    URL: connection().URL,\n    API_TOKEN: connection().API_TOKEN,\n    id:JSON.parse(localStorage.getItem('auth')) == null ? null:JSON.parse(localStorage.getItem('auth')).id\n}","export const setConfiguracion = payload => {\n    return {\n        type: 'SET_CONFIGURACION',\n        payload\n    }\n}","export const setPersonalexpense = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSE',\n        payload\n    }\n}\n\nexport const setPersonalexpenses = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSES',\n        payload\n    }\n}","export const setRevenueIndex = payload => {\n    return {\n        type: 'SET_REVENUE_INDEX',\n        payload\n    }\n}\n\nexport const setRevenueStore = payload => {\n    return {\n        type: 'SET_REVENUE_STORE',\n        payload\n    }\n}\n\nexport const setRevenueShow = payload => {\n    return {\n        type: 'SET_REVENUE_SHOW',\n        payload\n    }\n}\n\nexport const setRevenueUpdate = payload => {\n    return {\n        type: 'SET_REVENUE_UPDATE',\n        payload\n    }\n}\n\nexport const setRevenueDelete = payload => {\n    return {\n        type: 'SET_REVENUE_DELETE',\n        payload\n    }\n}","import * as configuracion from './configuracion'\nimport * as personalexpenses from './personlexpenses'\nimport * as expensestype from './expensestype'\nimport * as revenues from './revenues'\n\nexport const actions = {\n    configuracion,\n    personalexpenses,\n    expensestype,\n    revenues,\n}","import Swal from 'sweetalert2'\n\nexport const handleErrors = response => {\n    console.log(response);\n\n    //errores del api\n    if (response.success === false) {\n        throw response;\n    }\n    //otros errores\n    if (response) {\n        let messg = {\n            success: false,\n            errors: 'Ocurrio un error inesperado de conexión por favor recargue su navegador nuevamente.'\n        }\n        Swal.fire({\n            title: 'Atención',\n            text: messg.errors,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, recargar de nuevo'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n\n            }\n        })\n        if (response !== \"TypeError: Failed to fetch\") {\n            throw messg;\n        }\n        throw messg;\n\n    }\n};\n\nexport const generalErrorApi = response => {\n    throw response\n};\n\n/*\nresponseServer: function ( model, resp, opts ) {\n    window.Misc.removeSpinner(this.spinner);\n    if (!_.isUndefined(resp.success)) {\n        // response success or error\n        var text = resp.success ? '' : resp.errors;\n        if (_.isObject(resp.errors)) {\n            text = window.Misc.parseErrors(resp.errors);\n        }\n\n        if (!resp.success) {\n            alertify.error(text);\n            return;\n        }\n\n        window.Misc.redirect(window.Misc.urlFull(Route.route('facturas.show', {facturas: resp.id})));\n    }\n\n       /**\n        * Build URI with route and base url\n        */\n     /*  parseErrors: function ( errors ){\n        var text = '';\n        if( _.isObject( errors ) ){\n\n            var listError = '<ul>';\n\n            $.each(errors, function(field, item) {\n                 listError += '<li>'+ item[0] +'</li>';\n            });\n            listError += '</ul>';\n\n            text = listError;\n        }\n        return text;\n    },\n\n    */","export const setExpensestype = payload => {\n    return {\n        type: 'SET_EXPENSES_TYPE',\n        payload\n    }\n}","import { getExpensesTyped, saveExpenseType } from '../../api/typeexpense/typeexpense';\n\nimport { handleErrors } from '../../utils/errors';\nimport { actions } from '../../redux/actions/index';\nimport { store } from '../../store';\n\nexport const getExpensesType = async () => {\n    try {\n        let expensestypes = await getExpensesTyped();\n        store.dispatch(actions.expensestype.setExpensestype(expensestypes))\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//store\nexport const createExpenseType = async (data) => {\n    try {\n        const createExpense = await saveExpenseType(data);\n        console.log(createExpense);\n    } catch (e) {\n        handleErrors(e)\n    }\n}","import url from '../url';\n\nexport const getExpensesTyped = async () => {\n    const response = await fetch(`${url.URL}tipogastos?api_token=${url.API_TOKEN}&user_id=${url.id}`)\n    return await response.json();\n};\nexport const saveExpenseType = async (data) => {\n    const response = await fetch(`${url.URL}tipogastos`,\n        {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: url.API_TOKEN,\n                tipogastos_name: data.tipogastos_name,\n                tipogastos_active: data.tipogastos_active,\n                tipogastos_usuario: data.tipogastos_usuario,\n            }),\n        },\n    );\n\n    return await response.json();\n};\n","import React from 'react'\n\nimport { LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst LinearIndeterminate = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"secondary\" />\n        </div>\n    );\n};\n\n//styles\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default LinearIndeterminate","import React from 'react';\n\n//Componentes de terceros\nimport DataTable from 'react-data-table-component';\nimport { Link } from 'react-router-dom';\nimport LinearIndeterminate from '../../../components/linearIndeterminate'\nimport { Card, CardBody, CardHeader, Button } from 'reactstrap';\n\n// DataTables\nconst rowTheme = {\n  header: {\n    borderColor: 'red',\n  },\n  rows: {\n    spacingBorderRadius: '7px',\n    spacingMargin: '1px',\n    backgroundColor: 'white',\n  },\n  cells: {\n  },\n  footer: {\n    separatorStyle: 'none',\n  },\n};\n\nconst columns = [\n  {\n    name: 'Code',\n    selector: 'id',\n    sortable: true,\n    cell: row => <Link to={`/expenses/moduls/personalexpenses/show/${row.id}`}>{row.id}</Link>,\n    grow: 0,\n  },\n  {\n    name: 'Expense',\n    selector: 'gasto',\n    wrap: true,\n    sortable: true,\n  },\n  {\n    cell: row => <></>,\n    allowOverflow: true,\n    button: true,\n    width: '56px', // custom width for icon button\n  },\n];\n\nfunction IndexComponent(props) {\n  const { expensestypes, loading, onNew } = props;\n\n  return (\n    <Card>\n      <CardHeader>\n        <i className=\"fa fa-align-justify\"></i><strong>Daily Expenses</strong>\n        <small> Type Expenses </small>\n      </CardHeader>\n      <CardBody>\n        <DataTable\n          title={'Personal Expenses'}\n          columns={columns}\n          data={expensestypes}\n          actions={<Button name=\"Add\" onClick={onNew} ><i className=\"fa fa-plus m-1\"></i>Add</Button>}\n          highlightOnHover={true}\n          pagination={true}\n          customTheme={rowTheme}\n          progressPending={loading}\n          progressComponent={<LinearIndeterminate data={expensestypes} />}\n          progressShowTableHead\n          ignoreRowClick={true}\n          theme=\"solarized\"\n        />\n      </CardBody>\n    </Card >\n  );\n}\n\nexport default IndexComponent;","import React from 'react';\nimport IndexComponent from '../components/index-component'\n//redux\nimport { connect } from 'react-redux'\n// import { getExpensesType } from '../services/expensestype'\nimport { getExpensesType } from '../../../../services/expenses/expensestype'\ngetExpensesType();\n\nfunction Index(props) {\n  const { expenses, expensestypes } = props;\n  // add new register\n  const onNew = () => {\n    props.history.push('/expenses/references/expensestype/create')\n  }\n\n  return (\n    <IndexComponent expenses={expenses} expensestypes={expensestypes} onNew={onNew} />\n  );\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.personalexpenses.personalexpenses,\n  expensestypes: state.expensestype.expensestype,\n})\n\nexport default connect(mapStateToProps)(Index)"],"sourceRoot":""}