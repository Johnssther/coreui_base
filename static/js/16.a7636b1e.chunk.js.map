{"version":3,"sources":["api/api.js","views/Gastos/Ingresargastos/Ingresargastos.js"],"names":["Api","Object","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","concat","method","headers","Accept","Content-Type","body","JSON","stringify","username","password","then","response","json","responseJson","catch","error","data","name","email","password_confirmation","api_token","gasto","cantidad","precio_unidad","precioUnidad","precio_total","precioTotal","fecha","Fecha","id_usuario","parse","id","__webpack_exports__","columns","selector","sortable","cell","row","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","style","fontWeight","summary","Ingresargastos","props","_this","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","ingresargastos","gastoTotal","inputFecha","inputCantidad","inputGasto","inputPrecioUnidad","inputPrecioTotal","value","moment","disabledRanges","color","start","end","handleClick","bind","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","addExpenses","getGastos","_this2","setState","setTimeout","API","getExpenses","console","log","total","map","item","preciounid","Intl","NumberFormat","format","precio","length","Preciototal","reduce","accumulator","currentValue","saveExpenses","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","sm","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","react_datepicker2__WEBPACK_IMPORTED_MODULE_8__","backgroundColo","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_17__","type","event","target","reactstrap__WEBPACK_IMPORTED_MODULE_18__","key","onClick","className","react_data_table_component__WEBPACK_IMPORTED_MODULE_7___default","title","reactstrap__WEBPACK_IMPORTED_MODULE_19__","href","highlightOnHover","selectableRows","actions","pagination","Component"],"mappings":"iHAkBMA,aACF,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACXG,KAAKC,IAAM,kCAGXD,KAAKE,UAAYC,aAAaC,QAAQ,6DAIlCC,EAAWC,GACf,OAAOC,MAAK,GAAAC,OAAIR,KAAKC,IAAT,SAAqB,CAC7BQ,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAUX,EACVY,SAAUX,MAEfY,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC1BF,KAAK,SAACG,GACH,OAAOA,IAEVC,MAAM,SAAAC,GACH,MAAMA,yCAILC,GACT,OAAOjB,MAAK,GAAAC,OAAIR,KAAKC,IAAT,YAAwB,CAChCQ,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBU,KAAMD,EAAKC,KACXC,MAAOF,EAAKE,MACZV,SAAUQ,EAAKR,SACfC,SAAUO,EAAKP,SACfU,sBAAuBH,EAAKG,0BAEjCT,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC1BF,KAAK,SAACG,GACH,OAAOA,IAEVC,MAAM,SAAAC,GACH,MAAMA,yCAILC,GAETjB,MAAK,GAAAC,OAAIR,KAAKC,IAAT,UAAsB,CAEvBQ,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBa,UAAWzB,aAAaC,QAAQ,SAChCyB,MAAOL,EAAKK,MACZC,SAAUN,EAAKM,SACfC,cAAeP,EAAKQ,aACpBC,aAAcT,EAAKU,YACnBC,MAAOX,EAAKY,MACZC,WAAYb,EAAKa,eAGtBnB,KAAK,SAACC,GACL,OAAOA,EAASC,SAGfE,MAAM,SAAAC,GACH,MAAMA,0CAMd,OAAOhB,MAAK,GAAAC,OAAIR,KAAKC,IAAT,qBAAAO,OAAgCL,aAAaC,QAAQ,SAArD,gBAAAI,OAA4EM,KAAKwB,MAAMnC,aAAaC,QAAQ,SAASmC,KAC5HrB,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACH,OAAOA,IAEVC,MAAM,SAACC,GACJ,MAAMA,aAQPiB,EAAA,MAAI3C,qQC3Fb4C,EAAU,CACd,CACEhB,KAAM,QACNiB,SAAU,QACVC,UAAU,EACVC,KAAM,SAAAC,GAAG,OAAIC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,WAAY,MAASL,EAAIV,OAAaU,EAAIM,WAG5E,CACE1B,KAAM,WACNiB,SAAU,WACVC,UAAU,GAEZ,CACElB,KAAM,QACNiB,SAAU,QACVC,UAAU,GAEZ,CACElB,KAAM,eACNiB,SAAU,aACVC,UAAU,GAEZ,CACElB,KAAM,eACNiB,SAAU,SACVC,UAAU,IAKRS,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAxD,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACjBE,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAAE,KAAAF,OAAA0D,EAAA,EAAA1D,CAAAsD,GAAAK,KAAAzD,KAAMqD,KACDK,MAAQ,CACXC,gBAAgB,EAChBnC,KAAM,GACNoC,WAAY,EAEZC,WAAY,GACZC,cAAe,GACfC,WAAY,GACZC,kBAAmB,GACnBC,iBAAkB,GAElBC,MAAOC,OAGTb,EAAKc,eAAiB,CACpB,CACEC,MAAO,QACPC,MAAOH,MACPI,IAAKJ,QAITb,EAAKkB,YAAclB,EAAKkB,YAAYC,KAAjB3E,OAAA4E,EAAA,EAAA5E,CAAAwD,IACnBA,EAAKqB,YAAcrB,EAAKqB,YAAYF,KAAjB3E,OAAA4E,EAAA,EAAA5E,CAAAwD,IAzBFA,mFA6BjBtD,KAAK4E,gDAIK,IAAAC,EAAA7E,KACVA,KAAK8E,SAAS,CACZtD,KAAM,KAERuD,WAAW,WACTC,IAAIC,cACD/D,KAAK,SAACC,GACL+D,QAAQC,IAAIhE,GAEZ,IAAMiE,EAAQjE,EAASkE,IAAI,SAACC,GAC1B,OAAOA,EAAKrD,eAERT,EAAOL,EAASkE,IAAI,SAACC,GACzB,MAAO,CAAEnD,MAAOmD,EAAKnD,MAAOL,SAAUwD,EAAKxD,SAAUD,MAAOyD,EAAKzD,MAAO0D,WAAY,MAAO,IAAIC,KAAKC,cAAeC,OAAOJ,EAAKvD,eAAgB4D,OAAQ,MAAO,IAAIH,KAAKC,cAAeC,OAAOJ,EAAKrD,iBAIpM,GAAImD,EAAMQ,OAAS,EACjB,IACIC,EAAcT,EAAMU,OADR,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,SAGzDH,EAAc,EAGpBhB,EAAKC,SAAS,CACZtD,OACAoC,WAAYiC,OAGjB,2CAIH7F,KAAK8E,SAAS,CACZnB,gBAAiB3D,KAAK0D,MAAMC,iBAE9B3D,KAAK4E,kDAGL,IAAMpD,EAAO,CACXK,MAAO7B,KAAK0D,MAAMK,WAClBjC,SAAU9B,KAAK0D,MAAMI,cACrB9B,aAAchC,KAAK0D,MAAMM,kBACzB9B,YAA6C,KAAhClC,KAAK0D,MAAMO,iBAA0BjE,KAAK0D,MAAMI,cAAgB9D,KAAK0D,MAAMM,kBAAoBhE,KAAK0D,MAAMO,iBACvH7B,MAAOpC,KAAK0D,MAAMQ,MAAMwB,OAAO,YAC/BrD,WAAYvB,KAAKwB,MAAMnC,aAAaC,QAAQ,SAASmC,IAIvDyC,IAAIiB,aAAazE,GACjBxB,KAAKwE,+CAGE,IAAA0B,EAAAlG,KAEP,OAAkC,IAA9BA,KAAK0D,MAAMC,eAEXb,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACdxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAA,6BADF,aAGAF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACE3D,EAAAC,EAAAC,cAAC0D,EAAA,SAAD,CACEzD,MAAO,CAAE0D,eAAgB,OACzBC,SAAU,SAAA1C,GAAK,OAAIgC,EAAKpB,SAAS,CAAEZ,WACnCA,MAAOlE,KAAK0D,MAAMQ,QAEpBpB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAyBhD,KAAK0D,MAAMQ,MAAMwB,OAAO,gBAI3D5C,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACdxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAA,iCADF,YAGAF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACE3D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,QAAQ,cAAf,SACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,KAAK,OAAO1E,GAAG,aAAa2B,MAAOlE,KAAK0D,MAAMQ,MAAMwB,OAAO,YAAakB,SAAU,SAACM,GAAD,OAAWhB,EAAKpB,SAAS,CAAEjB,WAAYqD,EAAMC,OAAOjD,YAE/IpB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,QAAQ,iBAAf,YACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,KAAK,OAAO1E,GAAG,gBAAgBqE,SAAU,SAACM,GAAD,OAAWhB,EAAKpB,SAAS,CAAEhB,cAAeoD,EAAMC,OAAOjD,YAEzGpB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,QAAQ,cAAf,SACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,KAAK,OAAO1E,GAAG,aAAaqE,SAAU,SAACM,GAAD,OAAWhB,EAAKpB,SAAS,CAAEf,WAAYmD,EAAMC,OAAOjD,YAEnGpB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,QAAQ,qBAAf,iBACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,KAAK,OAAO1E,GAAG,oBAAoBqE,SAAU,SAACM,GAAD,OAAWhB,EAAKpB,SAAS,CAAEd,kBAAmBkD,EAAMC,OAAOjD,YAEjHpB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,QAAQ,oBAAf,gBACAjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,KAAK,OAAO1E,GAAG,mBAAmBqE,SAAU,SAACM,GAAD,OAAWhB,EAAKpB,SAAS,CAAEb,iBAAkBiD,EAAMC,OAAOjD,YAE/GpB,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,IAAI,MAAMC,QAAStH,KAAK2E,aAAhC,iBAQV7B,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAA,KAAGuE,UAAU,wBAA0BzE,EAAAC,EAAAC,cAAA,gCACvCF,EAAAC,EAAAC,cAAA,0BAGFF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACE3D,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACE0E,MAAO3E,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAOH,UAAU,OAAOI,KAAK,IAAItD,MAAM,UAAvC,KAAA7D,QAAsD,IAAIgF,KAAKC,cAAeC,OAAO1F,KAAK0D,MAAME,eACrInB,QAASA,EACTjB,KAAMxB,KAAK0D,MAAMlC,KACjBoG,kBAAkB,EAClBC,gBAAc,EACdC,QAAShF,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQC,IAAI,MAAMC,QAAStH,KAAKwE,aAAhC,SACTuD,YAAY,aA3JKC,aAmKd5E","file":"static/js/16.a7636b1e.chunk.js","sourcesContent":["/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\n\n// import { generalError } from '../services/error'\n// import { AsyncStorage } from 'react-native'\n\n// const API_TOKEN = \"AFF8tI4L4iK1i6exDkExHINKi3RqlrAg9f4sFzsuDwWL4mfMw7hsowmxSDiaCFhKmFpkpxnFgBhWef2V\";\n\n\n\n\n\nclass Api {\n    constructor() {\n        this.URL = \"http://coysa.herokuapp.com/api/\";\n        // this.URL = \"http://localhost/coysa/public/api/\";\n        // this.API_TOKEN = \"AFF8tI4L4iK1i6exDkExHINKi3RqlrAg9f4sFzsuDwWL4mfMw7hsowmxSDiaCFhKmFpkpxnFgBhWef2V\";\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        fetch(`${this.URL}gastos`, {\n\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: localStorage.getItem('token'),\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                id_usuario: data.id_usuario\n            }),\n\n        }).then((response) => {\n            return response.json();\n\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses() {\n        return fetch(`${this.URL}gastos?api_token=${localStorage.getItem('token')}&id_usuario=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n","import React, { Component } from 'react';\n\n//Componentes de terceros\nimport DataTable from 'react-data-table-component';\nimport { Calendar } from 'react-datepicker2';\nimport moment from 'moment-jalaali'\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge\n} from 'reactstrap';\n\n// API\nimport API from '../../../api/api';\n\nconst columns = [\n  {\n    name: 'Fecha',\n    selector: 'fecha',\n    sortable: true,\n    cell: row => <div><div style={{ fontWeight: 700, }}>{row.fecha}</div>{row.summary}</div>,\n\n  },\n  {\n    name: 'Cantidad',\n    selector: 'cantidad',\n    sortable: true,\n  },\n  {\n    name: 'Gasto',\n    selector: 'gasto',\n    sortable: true,\n  },\n  {\n    name: 'Precio Unid.',\n    selector: 'preciounid',\n    sortable: true,\n  },\n  {\n    name: 'Precio Total',\n    selector: 'precio',\n    sortable: true,\n    // right: true,\n  },\n];\n\nclass Ingresargastos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingresargastos: false,\n      data: [],\n      gastoTotal: 0,\n      //Input formulario\n      inputFecha: '',\n      inputCantidad: '',\n      inputGasto: '',\n      inputPrecioUnidad: '',\n      inputPrecioTotal: '',\n      //Calendario\n      value: moment(),\n\n    }\n    this.disabledRanges = [\n      {\n        color: 'green',\n        start: moment(),\n        end: moment()\n      },\n    ]\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.handleClick = this.handleClick.bind(this);\n    this.addExpenses = this.addExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    this.getGastos()\n\n  }\n\n  getGastos() {\n    this.setState({\n      data: []\n    })\n    setTimeout(() => {\n      API.getExpenses()\n        .then((response) => {\n          console.log(response);\n\n          const total = response.map((item) => {\n            return item.precio_total;\n          })\n          const data = response.map((item) => {\n            return { fecha: item.fecha, cantidad: item.cantidad, gasto: item.gasto, preciounid: '$ ' + new Intl.NumberFormat().format(item.precio_unidad), precio: '$ ' + new Intl.NumberFormat().format(item.precio_total) }\n          })\n\n\n          if (total.length > 0) {\n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n            var Preciototal = total.reduce(reducer);\n          } else {\n            var Preciototal = 0;\n          }\n\n          this.setState({\n            data,\n            gastoTotal: Preciototal,\n          })\n        })\n    }, 500)\n  }\n\n  handleClick() {\n    this.setState({\n      ingresargastos: !this.state.ingresargastos,\n    })\n    this.getGastos()\n  }\n  addExpenses() {\n    const data = {\n      gasto: this.state.inputGasto,\n      cantidad: this.state.inputCantidad,\n      precioUnidad: this.state.inputPrecioUnidad,\n      precioTotal: this.state.inputPrecioTotal === '' ? this.state.inputCantidad * this.state.inputPrecioUnidad : this.state.inputPrecioTotal,\n      Fecha: this.state.value.format('YYYY/M/D'),\n      id_usuario: JSON.parse(localStorage.getItem('auth')).id,\n      // Fecha: this.state.inputFecha,\n    }\n\n    API.saveExpenses(data)\n    this.handleClick()\n  }\n\n  render() {\n\n    if (this.state.ingresargastos === true) {\n      return (\n        <Row>\n          <Col xs='12' sm='6'>\n            <Card>\n              <CardHeader>\n                <strong>Nuevo gasto</strong> generado\n              </CardHeader>\n              <CardBody>\n                <Calendar\n                  style={{ backgroundColo: 'red' }}\n                  onChange={value => this.setState({ value })}\n                  value={this.state.value}\n                />\n                <h6><strong>Fecha: </strong>{this.state.value.format('YYYY/M/D')}</h6>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <Card>\n              <CardHeader>\n                <strong>Ingresar gastos</strong> diarios\n              </CardHeader>\n              <CardBody>\n                <FormGroup>\n                  <Label htmlFor=\"inputFecha\">Fecha</Label>\n                  <Input type=\"text\" id=\"inputFecha\" value={this.state.value.format('YYYY/M/D')} onChange={(event) => this.setState({ inputFecha: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputCantidad\">Cantidad</Label>\n                  <Input type=\"text\" id=\"inputCantidad\" onChange={(event) => this.setState({ inputCantidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputGasto\">Gasto</Label>\n                  <Input type=\"text\" id=\"inputGasto\" onChange={(event) => this.setState({ inputGasto: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioUnidad\">Precio unidad</Label>\n                  <Input type=\"text\" id=\"inputPrecioUnidad\" onChange={(event) => this.setState({ inputPrecioUnidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioTotal\">Precio Total</Label>\n                  <Input type=\"text\" id=\"inputPrecioTotal\" onChange={(event) => this.setState({ inputPrecioTotal: event.target.value })} />\n                </FormGroup>\n                <Button key=\"add\" onClick={this.addExpenses}>Registrar</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <i className=\"fa fa-align-justify\"></i><strong>Gastos diarios</strong>\n          <small> Gastos </small>\n\n        </CardHeader>\n        <CardBody>\n          <DataTable\n            title={<small>Gastos diarios. Total: <Badge className=\"mr-1\" href=\"#\" color=\"danger\">{`$ ${new Intl.NumberFormat().format(this.state.gastoTotal)}`}</Badge></small>}\n            columns={columns}\n            data={this.state.data}\n            highlightOnHover={true}\n            selectableRows\n            actions={<Button key=\"add\" onClick={this.handleClick}>Nuevo</Button>}\n            pagination={true}\n          />\n        </CardBody>\n      </Card >\n    );\n  }\n}\n\nexport default Ingresargastos;\n"],"sourceRoot":""}