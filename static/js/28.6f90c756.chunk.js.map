{"version":3,"sources":["views/expenses/moduls/personalexpenses/components/show-component.js","views/expenses/moduls/personalexpenses/containers/show.js","api/api.js","redux/actions/configuracion.js","redux/actions/personlexpenses.js","redux/actions/expensestype.js","redux/actions/index.js","utils/errors.js","views/expenses/moduls/personalexpenses/services/personalexpenses.js"],"names":["ShowComponent","props","expense","Container","Card","CardHeader","CardBody","Row","xs","Col","className","sm","size","id","md","fecha","tipogasto","gasto","cantidad","Intl","NumberFormat","format","precio_unidad","precio_total","CardFooter","offset","Button","color","connect","state","expensestype","personalexpenses","personalexpense","match","params","useEffect","showExpense","console","log","Api","host","window","location","this","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","method","headers","Accept","body","JSON","stringify","username","password","then","response","json","responseJson","catch","error","data","name","email","password_confirmation","api_token","user_id","tipogasto_id","parse","mes","setConfiguracion","payload","type","setPersonalexpense","setPersonalexpenses","setExpensestype","actions","configuracion","handleErrors","alert","getExpenses","a","API","expenses","store","dispatch","createExpense","saveExpenses"],"mappings":"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","file":"static/js/28.6f90c756.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    CardFooter,\n    Container,\n    Row,\n    Col,\n    Button,\n} from 'reactstrap';\n\nconst ShowComponent = (props) => {\n    const { expense } = props\n    return (\n        <Container>\n            <Card>\n                <CardHeader>\n                    Show Expense\n                </CardHeader>\n                <CardBody>\n                    <Container>\n                        <Row xs=\"2\">\n                            <Col className=\"text-right mb-23\" sm={{ size: 5 }}> <b><label>CÃ³digo:</label> </b></Col>\n                            <Col>{expense.id}</Col>\n                        </Row>\n                        <Row xs=\"1\" sm=\"2\" md=\"4\">\n                            <Col className=\"text-right\" sm={{ size: 5 }}><b><label>Fecha:</label></b></Col>\n                            <Col>{expense.fecha}</Col>\n                        </Row>\n                        <Row xs=\"1\" sm=\"2\" md=\"4\">\n                            <Col className=\"text-right\" sm={{ size: 5 }}><b><label>Tipo de Gasto:</label></b></Col>\n                            <Col>{expense.tipogasto.gasto}</Col>\n                        </Row>\n                        <Row xs=\"3\">\n                            <Col className=\"text-right\" sm={{ size: 5 }}><b><label>Gasto:</label></b></Col>\n                            <Col>{expense.gasto}</Col>\n                        </Row>\n                        <Row xs=\"4\">\n                            <Col className=\"text-right\" sm={{ size: 5 }}><b><label>Cantidad:</label></b></Col>\n                            <Col>{expense.cantidad}</Col>\n                        </Row>\n                        <Row xs=\"4\">\n                            <Col xs=\"6\" className=\"text-right\" sm={{ size: 5 }}><b><label>Precio:</label></b></Col>\n                            <Col xs=\"6\">{`$${new Intl.NumberFormat().format(expense.precio_unidad)}`}</Col>\n\n                        </Row>\n                        <Row xs=\"1\" sm=\"2\" md=\"4\">\n                            <Col className=\"text-right\" sm={{ size: 5 }}><b><label>Precio Total:</label></b></Col>\n                            <Col xs=\"6\">{`$${new Intl.NumberFormat().format(expense.precio_total)}`}</Col>\n                        </Row>\n                    </Container>\n                </CardBody>\n                <CardFooter>\n                    <Row>\n                        <Col sm={{ size: 6, offset: 4 }}>\n                            <Button className=\"col-sm-3 m-1\" color=\"secondary\" size=\"sm\">To return</Button>\n                            <Button className=\"col-sm-3 m-1\" color=\"dark\" size=\"sm\">Edit</Button>\n                        </Col>\n                    </Row>\n                </CardFooter>\n            </Card>\n        </Container>\n    );\n};\n\nexport default ShowComponent","import React, { useEffect } from 'react';\n\n//redux\nimport { connect } from 'react-redux'\n//services\nimport { showExpense } from '../services/personalexpenses'\nimport ShowComponent from '../components/show-component'\n\nfunction Show(props) {\n    const { match, expense } = props\n    const { params } = match\n\n    useEffect(() => {\n        // code to run on component mount\n        showExpense(params)\n    }, [])\n\n    console.log(expense);\n    return (\n        <>\n            <ShowComponent expense={expense} />\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    expensestype: state.expensestype.expensestype,\n    expense: state.personalexpenses.personalexpense,\n})\n\nexport default connect(mapStateToProps)(Show)","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n\n\n    /* Expense */\n    saveExpenses(data) {\n        console.log(data, 'joh');\n\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precio_unidad,\n                precio_total: data.precio_total,\n                fecha: data.fecha,\n                user_id: data.user_id,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses(data) {\n        return fetch(`${this.URL}gastos?api_token=${this.API_TOKEN}\n        &user_id=${JSON.parse(localStorage.getItem('auth')).id}\n        &mes=${data.mes}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Show Expense\n    showExpense(data) {\n        return fetch(`${this.URL}gastos/${data.id}?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getExpensesType() {\n        return fetch(`${this.URL}tipogastos?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 5. Elimina los gastos\n    // gastos/85\n    deleteExpense(id) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}gastos/${id}?api_token=${this.API_TOKEN}`, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n","export const setConfiguracion = payload => {\n    return {\n        type: 'SET_CONFIGURACION',\n        payload\n    }\n}","export const setPersonalexpense = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSE',\n        payload\n    }\n}\n\nexport const setPersonalexpenses = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSES',\n        payload\n    }\n}","export const setExpensestype = payload => {\n    return {\n        type: 'SET_EXPENSES_TYPE',\n        payload\n    }\n}","import * as configuracion from './configuracion'\nimport * as personalexpenses from './personlexpenses'\nimport * as expensestype from './expensestype'\n\nexport const actions = {\n    configuracion,\n    personalexpenses,\n    expensestype,\n}","export const handleErrors = response => {\n    console.log(response);\n    if (response) {\n        if (response !== \"TypeError: Failed to fetch\") {\n            alert('Ha ocurrido un error de conexiÃ³n.')\n            return\n        }\n\n        alert('Ha ocurrido un error inesperado, por favor recarga tu navegador.')\n    }\n};\n\nexport const generalError = response => {\n    if (response === 'TypeError: Network request failed') {\n        // alert('Error de red', 'Verifique su conexiÃ³n de internet')\n    } else {\n        // generic errors\n    }\n};","//Llamadas al api\nimport API from '../../../../../api/api';\nimport { handleErrors } from '../../../../../utils/errors';\n\n\n//redux\nimport { actions } from '../../../../../redux/actions/index';\nimport { store } from '../../../../../store';\n\n//index\nexport const getExpenses = async () => {\n    let data = {\n        mes: null,\n    }\n    try {\n        const expenses = await API.getExpenses(data);\n        store.dispatch(actions.personalexpenses.setPersonalexpenses(expenses))\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//store\nexport const createExpense = async (data) => {\n    try {\n        const createExpense = await API.saveExpenses(data);\n        console.log(createExpense);\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//show\nexport const showExpense = async (data) => {\n    try {\n        const showExpense = await API.showExpense(data);\n        await store.dispatch(actions.personalexpenses.setPersonalexpense(showExpense))\n    } catch (e) {\n        handleErrors(e)\n    }\n}"],"sourceRoot":""}