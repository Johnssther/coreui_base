{"version":3,"sources":["api/api.js","views/Gastos/Ingresargastos/Ingresargastos.js"],"names":["Api","Object","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","concat","method","headers","Accept","Content-Type","body","JSON","stringify","username","password","then","response","json","responseJson","catch","error","data","api_token","gasto","cantidad","precio_unidad","precioUnidad","precio_total","precioTotal","fecha","Fecha","id_usuario","parse","id","__webpack_exports__","columns","name","selector","sortable","cell","row","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","style","fontWeight","summary","Ingresargastos","props","_this","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","ingresargastos","gastoTotal","inputFecha","inputCantidad","inputGasto","inputPrecioUnidad","inputPrecioTotal","value","moment","disabledRanges","color","start","end","handleClick","bind","_home_alejandro_Im_genes_proyecto_money_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","addExpenses","getGastos","_this2","setState","setTimeout","API","getExpenses","console","log","map","item","preciounid","Intl","NumberFormat","format","precio","saveExpenses","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","sm","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","react_datepicker2__WEBPACK_IMPORTED_MODULE_8__","backgroundColo","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_17__","type","event","target","reactstrap__WEBPACK_IMPORTED_MODULE_18__","key","onClick","className","react_data_table_component__WEBPACK_IMPORTED_MODULE_7___default","title","reactstrap__WEBPACK_IMPORTED_MODULE_19__","href","highlightOnHover","selectableRows","actions","pagination","Component"],"mappings":"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","file":"static/js/15.05a17705.chunk.js","sourcesContent":["/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\n\n// import { generalError } from '../services/error'\n// import { AsyncStorage } from 'react-native'\n\n// const API_TOKEN = \"AFF8tI4L4iK1i6exDkExHINKi3RqlrAg9f4sFzsuDwWL4mfMw7hsowmxSDiaCFhKmFpkpxnFgBhWef2V\";\n\n\n\n\n\nclass Api {\n    constructor() {\n        this.URL = \"http://localhost/coysa/public/api/\";\n        // this.API_TOKEN = \"AFF8tI4L4iK1i6exDkExHINKi3RqlrAg9f4sFzsuDwWL4mfMw7hsowmxSDiaCFhKmFpkpxnFgBhWef2V\";\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        fetch(`${this.URL}gastos`, {\n\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: localStorage.getItem('token'),\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                id_usuario:data.id_usuario\n            }),\n\n        }).then((response) => {\n            return response.json();\n\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses() {\n        return fetch(`${this.URL}gastos?api_token=${localStorage.getItem('token')}&id_usuario=${ JSON.parse(localStorage.getItem('auth')).id }`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n","import React, { Component } from 'react';\n\n//Componentes de terceros\nimport DataTable from 'react-data-table-component';\nimport { Calendar } from 'react-datepicker2';\nimport moment from 'moment-jalaali'\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge\n} from 'reactstrap';\n\n// API\nimport API from '../../../api/api';\n\nconst columns = [\n  {\n    name: 'Fecha',\n    selector: 'fecha',\n    sortable: true,\n    cell: row => <div><div style={{ fontWeight: 700, }}>{row.fecha}</div>{row.summary}</div>,\n\n  },\n  {\n    name: 'Cantidad',\n    selector: 'cantidad',\n    sortable: true,\n  },\n  {\n    name: 'Gasto',\n    selector: 'gasto',\n    sortable: true,\n  },\n  {\n    name: 'Precio Unid.',\n    selector: 'preciounid',\n    sortable: true,\n  },\n  {\n    name: 'Precio Total',\n    selector: 'precio',\n    sortable: true,\n    // right: true,\n  },\n];\n\nclass Ingresargastos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingresargastos: false,\n      data: [],\n      gastoTotal:0,\n      //Input formulario\n      inputFecha: '',\n      inputCantidad: '',\n      inputGasto: '',\n      inputPrecioUnidad: '',\n      inputPrecioTotal: '',\n      //Calendario\n      value: moment(),\n\n    }\n    this.disabledRanges = [\n      {\n        color: 'green',\n        start: moment(),\n        end: moment()\n      },\n    ]\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.handleClick = this.handleClick.bind(this);\n    this.addExpenses = this.addExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    this.getGastos()\n\n  }\n\n  getGastos() {\n    this.setState({\n      data: []\n    })\n    setTimeout(() => {\n      API.getExpenses()\n        .then((response) => {\n          console.log(response);\n          \n          const total = response.map((item) => {\n            return item.precio_total;\n          })\n          const data = response.map((item) => {\n            return { fecha: item.fecha, cantidad: item.cantidad, gasto: item.gasto, preciounid: '$ ' + new Intl.NumberFormat().format(item.precio_unidad), precio: '$ ' + new Intl.NumberFormat().format(item.precio_total) }\n          })\n          const Preciototal=0\n          // if ( total.length > 0 ) {\n          // }\n          // const reducer = (accumulator, currentValue) => accumulator + currentValue;\n          // const  Preciototal = total.reduce(reducer)\n\n          this.setState({\n            data, \n            gastoTotal:Preciototal,\n          })\n        })\n    }, 500)\n  }\n\n  handleClick() {\n    this.setState({\n      ingresargastos: !this.state.ingresargastos,\n    })\n    this.getGastos()\n  }\n  addExpenses() {\n    const data = {\n      gasto: this.state.inputGasto,\n      cantidad: this.state.inputCantidad,\n      precioUnidad: this.state.inputPrecioUnidad,\n      precioTotal: this.state.inputPrecioTotal === '' ? this.state.inputCantidad * this.state.inputPrecioUnidad : this.state.inputPrecioTotal,\n      Fecha: this.state.value.format('YYYY/M/D'),\n      id_usuario: JSON.parse(localStorage.getItem('auth')).id,\n      // Fecha: this.state.inputFecha,\n    }\n\n    API.saveExpenses(data)\n    this.handleClick()\n  }\n\n  render() {\n    console.log('-------------------------', this.state.gastoTotal);\n    \n    if (this.state.ingresargastos === true) {\n      return (\n        <Row>\n          <Col xs='12' sm='6'>\n            <Card>\n              <CardHeader>\n                <strong>Nuevo gasto</strong> generado\n              </CardHeader>\n              <CardBody>\n                <Calendar\n                  style={{ backgroundColo: 'red' }}\n                  onChange={value => this.setState({ value })}\n                  value={this.state.value}\n                />\n                <h6><strong>Fecha: </strong>{this.state.value.format('YYYY/M/D')}</h6>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <Card>\n              <CardHeader>\n                <strong>Ingresar gastos</strong> diarios\n              </CardHeader>\n              <CardBody>\n                <FormGroup>\n                  <Label htmlFor=\"inputFecha\">Fecha</Label>\n                  <Input type=\"text\" id=\"inputFecha\" value={this.state.value.format('YYYY/M/D')} onChange={(event) => this.setState({ inputFecha: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputCantidad\">Cantidad</Label>\n                  <Input type=\"text\" id=\"inputCantidad\" onChange={(event) => this.setState({ inputCantidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputGasto\">Gasto</Label>\n                  <Input type=\"text\" id=\"inputGasto\" onChange={(event) => this.setState({ inputGasto: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioUnidad\">Precio unidad</Label>\n                  <Input type=\"text\" id=\"inputPrecioUnidad\" onChange={(event) => this.setState({ inputPrecioUnidad: event.target.value })} />\n                </FormGroup>\n                <FormGroup>\n                  <Label htmlFor=\"inputPrecioTotal\">Precio Total</Label>\n                  <Input type=\"text\" id=\"inputPrecioTotal\" onChange={(event) => this.setState({ inputPrecioTotal: event.target.value })} />\n                </FormGroup>\n                <Button key=\"add\" onClick={this.addExpenses}>Registrar</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <i className=\"fa fa-align-justify\"></i><strong>Gastos diarios</strong>\n          <small> Gastos </small>\n          \n        </CardHeader>\n        <CardBody>\n          <DataTable\n            title={<small>Gastos diarios. Total: <Badge className=\"mr-1\" href=\"#\" color=\"danger\">{`$ ${ new Intl.NumberFormat().format(this.state.gastoTotal) }`}</Badge></small>}\n            columns={columns}\n            data={this.state.data}\n            highlightOnHover={true}\n            selectableRows\n            actions={<Button key=\"add\" onClick={this.handleClick}>Nuevo</Button>}\n            pagination={true}\n          />\n        </CardBody>\n      </Card >\n    );\n  }\n}\n\nexport default Ingresargastos;\n"],"sourceRoot":""}