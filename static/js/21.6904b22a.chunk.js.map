{"version":3,"sources":["api/dashboard.js","views/components/carrucelinfinite.js","views/Widgets/Widget02.js","views/Dashboard/gbarras.js","views/Dashboard/table.js","views/Dashboard/Dashboard.js","utils/errors.js","api/conection.js","redux/actions/configuracion.js","redux/actions/personlexpenses.js","redux/actions/revenues.js","redux/actions/index.js","redux/actions/expensestype.js","api/typeexpense/api.js","services/expenses/expensestype.js","views/layout/main.js","api/revenues/revenues.js","services/revenues/revenues.js","views/components/loading.js"],"names":["this","URL","connection","API_TOKEN","localStorage","getItem","fetch","JSON","parse","id","then","response","json","responseJson","catch","error","data","Carrucelinfinite","Widget02","props","className","cssModule","header","mainText","icon","color","footer","link","variant","children","attributes","padding","card","lead","style","classes","mapToCssModules","classNames","Card","CardBody","blockIcon","CardFooter","href","cardFooter","Component","defaultProps","Gbarras","state","gastoTotal","mes","console","log","borderRadius","CardHeader","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","map","item","precio_total_mes","options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","Dashboard","loading","expensestype","valueSelectExpensestype","getExpensesMonths","getExpensesMonth","getExpensesType","expensestypes","value","gasto","setState","ApiDashboard","getTotalExpensesMonth","e","getTotalExpensesMonths","success","Alert","title","to","onChange","newValue","onChangeSelect","Intl","NumberFormat","format","toString","connect","expense","personalexpenses","createpersonalexpense","handleErrors","messg","errors","Swal","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","window","location","reload","generalErrorApi","host","setConfiguracion","payload","type","setPersonalexpense","setPersonalexpenses","setRevenueIndex","setRevenueStore","setRevenueShow","setRevenueUpdate","setRevenueDelete","actions","configuracion","revenues","setExpensestype","method","headers","Accept","body","stringify","api_token","tipogastos_name","tipogastos_active","tipogastos_usuario","a","API","store","dispatch","createExpenseType","saveExpenseType","createExpense","Main","useState","USER","revenue_dt","revenue_name","revenue_amount","revenue_description","revenue_saving_percentaje","revenue_user","indexRevenue","ApiRevenue","index","storeRevenue","Loading"],"mappings":"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","file":"static/js/21.6904b22a.chunk.js","sourcesContent":["/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nimport { generalErrorApi } from '../utils/errors';\nimport { connection } from './conection';\n\nclass ApiDashboard {\n    constructor() {\n        this.URL = connection().URL;\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n    \n    getTotalExpensesMonths() {\n        return fetch(`${this.URL}dashboard/totalexpensesmonths?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n    getTotalExpensesMonth(data) {\n        \n        return fetch(`${this.URL}dashboard/totalexpensesmonth?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}&tipogasto=${data}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new ApiDashboard();\n","import React from 'react';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nimport {\n    Card, CardBody,\n    CardHeader,\n} from 'reactstrap';\n\nfunction Carrucelinfinite(props) {\n    const { data, color } = props\n    console.log(data, 'data');\n    console.log(color, 'color');\n\n    let mes_nombre = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre',]\n\n    return (\n        <div className=\"row\">\n        {\n            data.map((item, index) => {\n                return (\n                    <div className=\"col\" key={index}>\n                        <Card style={{ borderRadius: 20 }}>\n                            <CardHeader className=\"text-white\" style={{ background: color, borderTopLeftRadius: 20, borderTopRightRadius: 20 }}>\n                                <h4> {mes_nombre[item.mes - 1]} {item.anio} </h4>\n                            </CardHeader>\n                            <CardBody className=\"text-white\" style={{ background: color, borderBottomLeftRadius: 20, borderBottomRightRadius: 20 }}>\n                                Gastos: <h3> {`$ ${new Intl.NumberFormat().format(item.precio_total_mes)}`} </h3>\n                                <hr></hr>\n                            </CardBody>\n                        </Card>\n                    </div>\n                )\n            })\n        }\n        </div>\n\n    );\n}\n\nexport default Carrucelinfinite;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter } from 'reactstrap';\nimport classNames from 'classnames';\nimport { mapToCssModules } from 'reactstrap/lib/utils';\n\nconst propTypes = {\n  header: PropTypes.string,\n  mainText: PropTypes.string,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  variant: PropTypes.string,\n  footer: PropTypes.bool,\n  link: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  header: '$1,999.50',\n  mainText: 'Income',\n  icon: 'fa fa-cogs',\n  color: 'primary',\n  variant: '0',\n  link: '#',\n};\n\nclass Widget02 extends Component {\n  render() {\n    const { className, cssModule, header, mainText, icon, color, footer, link, children, variant, ...attributes } = this.props;\n\n    // demo purposes only\n    const padding = (variant === '0' ? { card: 'p-3', icon: 'p-3', lead: 'mt-2' } : (variant === '1' ? {\n      card: 'p-0', icon: 'p-4', lead: 'pt-3',\n    } : { card: 'p-0', icon: 'p-4 px-5', lead: 'pt-3' }));\n\n    const card = { style: 'clearfix', color: color, icon: icon, classes: '' };\n    card.classes = mapToCssModules(classNames(className, card.style, padding.card), cssModule);\n\n    const lead = { style: 'h5 mb-0', color: color, classes: '' };\n    lead.classes = classNames(lead.style, 'text-' + card.color, padding.lead);\n\n    const blockIcon = function (icon) {\n      const classes = classNames(icon, 'bg-' + card.color, padding.icon, 'font-2xl mr-3 float-left');\n      return (<i className={classes}></i>);\n    };\n\n    const cardFooter = function () {\n      if (footer) {\n        return (\n          <CardFooter className=\"px-3 py-2\">\n            <a className=\"font-weight-bold font-xs btn-block text-muted\" href={link}>Ver Más\n              <i className=\"fa fa-angle-right float-right font-lg\"></i></a>\n          </CardFooter>\n        );\n      }\n    };\n\n    return (\n      <Card>\n        <CardBody className={card.classes} {...attributes}>\n          {blockIcon(card.icon)}\n          <div className={lead.classes}>{header}</div>\n          <div className=\"text-muted text-uppercase font-weight-bold font-xs\">{mainText}</div>\n        </CardBody>\n        {cardFooter()}\n      </Card>\n    );\n  }\n}\n\nWidget02.propTypes = propTypes;\nWidget02.defaultProps = defaultProps;\n\nexport default Widget02;","\nimport React, { Component } from 'react';\nimport WidgetO from '../Widgets/Widget02'\n// Main Chart\nimport ApiDashboard from '../../api/dashboard';\nimport {\n  Card, CardBody,\n  CardHeader,\n  CardColumns\n} from 'reactstrap';\nimport Loading from '../components/loading'\n\nimport { Bar, Doughnut, Line, Pie, Polar, Radar } from 'react-chartjs-2';\n\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\n\nclass Gbarras extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gastoTotal: '',\n    }\n  }\n\n  render() {\n    const mes = this.props.mes;\n    console.log(mes, 'a');\n\n    return (\n      <>\n        <Card style={{ borderRadius:'10px' }}>\n          <CardHeader style={{ borderRadius:'10px 10px 0px 0px' }}>\n            Histograma del 2020\n              <div className=\"card-header-actions\">\n            </div>\n          </CardHeader>\n          <CardBody>\n            <div className=\"chart-wrapper\">\n              <Bar\n                data={\n                  {\n                    labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n                    datasets: [\n                      {\n                        label: 'Gastos mensuales',\n                        backgroundColor: this.props.color,\n                        borderColor: 'rgba(255,99,132,1)',\n                        borderWidth: 1,\n                        hoverBackgroundColor: 'rgba(168,132,8,66)',\n                        hoverBorderColor: 'rgba(255,99,132,1)',\n                        data: mes.map((item) => item.precio_total_mes),\n                      },\n                    ],\n                  }\n                }\n                options={\n                  {\n                    tooltips: {\n                      enabled: false,\n                      custom: CustomTooltips\n                    },\n                    maintainAspectRatio: false\n                  }\n                } />\n            </div>\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n\n}\n\nexport default Gbarras;","\nimport React, { Component } from 'react';\n\nimport {\n    Card, CardBody,\n    CardHeader,\n    CardColumns,\n    Badge,\n    Table,\n    Pagination,\n    PaginationItem,\n    PaginationLink,\n} from 'reactstrap';\n\nclass Datos extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            gastoTotal: '',\n\n        }\n    }\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        const mes = this.props.mes;\n        console.log(mes, 'a');\n\n        return (\n            <>\n\n                <Card>\n                    <CardHeader>\n                        <i className=\"fa fa-align-justify\"></i> Mis finanzas en el año. <Badge color=\"success\">Beta</Badge>\n                    </CardHeader>\n                    <CardBody>\n                        <Table responsive striped>\n                            <thead>\n                                <tr style={{ background:'#FFA73D', color:'white' }}>\n                                    <th>2020</th>\n                                    <th>Enero</th>\n                                    <th>Febrero</th>\n                                    <th>Marzo</th>\n                                    <th>Abril</th>\n                                    <th>Mayo</th>\n                                    <th>Junio</th>\n                                    <th>Julio</th>\n                                    <th>Agosto</th>\n                                    <th>Septiembre</th>\n                                    <th>Octubre</th>\n                                    <th>Noviembre</th>\n                                    <th>Diciembre</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <Badge color=\"success\">Ingresos</Badge>\n                                    </td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <Badge color=\"danger\">Gastos</Badge>\n                                    </td>\n                                    <td>$600.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$0</td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <Badge color=\"warning\">Ahorro</Badge>\n                                    </td>\n                                    <td>$1.800.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$1.000.000</td>\n                                    <td>$0</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </CardBody>\n                </Card>\n            </>\n        );\n    }\n\n}\n\nexport default Datos;\n\n\n","\nimport React, { Component } from 'react';\n// Main Chart\nimport ApiDashboard from '../../api/dashboard';\nimport Carrucelinfinite from '../components/carrucelinfinite';\nimport { Link } from 'react-router-dom';\nimport Main from '../layout/main'\n\nimport {\n  Card, CardBody,\n  Alert,\n} from 'reactstrap';\n\nimport Loading from '../components/loading'\nimport Gbarras from '../Dashboard/gbarras'\nimport Datos from '../Dashboard/table'\n\nimport { connect } from 'react-redux'\nimport Select from 'react-select'\n\nimport { getExpensesType } from '../../services/expenses/expensestype'\nimport { indexRevenue, storeRevenue, showRevenue, updateRevenue, deleteRevenue } from '../../services/revenues/revenues'\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gastoTotal: '',\n      mes: [],\n      loading: true,\n      expensestype: [],\n      valueSelectExpensestype: '',\n      color: '#F55457',\n    }\n  }\n  async componentDidMount() {\n    this.getExpensesMonths()\n    this.getExpensesMonth()\n    await getExpensesType();\n   \n    const expensestype = await this.props.expensestypes.map((item) => {\n      return { value: item.id, label: item.gasto }\n    })\n\n    this.setState({\n      expensestype\n    })\n\n  }\n\n  //getExpenseMont card\n  getExpensesMonth(data) {\n    ApiDashboard.getTotalExpensesMonth(data)\n      .then((response) => {\n        this.setState({\n          gastoTotal: response,\n          loading: false\n        });\n      })\n      .catch(e => {\n        console.log(e)\n        this.setState({\n          loading: false\n        });\n      })\n  }\n  //getExpenseMonts slider\n  getExpensesMonths() {\n    ApiDashboard.getTotalExpensesMonths()\n      .then((response) => {\n        this.setState({\n          mes: response,\n          loading: false\n        });\n      })\n      .catch(e => {\n        console.log(e)\n        this.setState({\n          loading: false\n        });\n      })\n  }\n  //getExpenseMonts\n  async onChangeSelect(value) {\n    await this.setState({ valueSelectExpensestype: value })\n    this.getExpensesMonth(this.state.valueSelectExpensestype)\n  }\n\n\n\n  render() {\n\n    if (this.state.loading) {\n      return (\n        <Loading loading={this.state.loading}></Loading>\n      );\n    }\n    return (\n      <Main success={false}>\n\n        <div className=\"row mb-2\">\n          <div className=\"offset-sm-3 col-sm-6\">\n            <Alert color=\"success\">\n              Novedades:  <br></br>\n              -Ahora puedes registrar tus ingresos y verlos en el modulo de ingresos que hemos creado para tí. <br></br>\n              -Una vista mas limpia y minimalista. <br></br>\n              -Aun continuamos mejorando. <br></br>\n              <Link title=\"Ir al modulo de ingresos\" className=\"btn btn-warning\" to={`/revenues`}>Explorar</Link>\n\n            </Alert>\n            <Select\n              className=\"is-invalid\"\n              options={this.state.expensestype}\n              onChange={(newValue) => { this.onChangeSelect(newValue.value) }}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"offset-sm-3 col-sm-6\">\n            <Card style={{ borderRadius: '10px' }}>\n              <CardBody>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h6>Mis Gastos</h6>\n                    <h3>{'$' + new Intl.NumberFormat().format(this.state.gastoTotal.toString())}</h3>\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"offset-sm-3 col-sm-6\">\n            <Gbarras mes={this.state.mes} color={this.state.color} />\n          </div>\n        </div>\n        {/* <Datos /> */}\n      </Main>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expensestypes: state.expensestype.expensestype,\n  expense: state.personalexpenses.createpersonalexpense,\n})\n\nexport default connect(mapStateToProps)(Dashboard)","import Swal from 'sweetalert2'\n\nexport const handleErrors = response => {\n    console.log(response);\n\n    //errores del api\n    if (response.success === false) {\n        throw response;\n    }\n    //otros errores\n    if (response) {\n        let messg = {\n            success: false,\n            errors: 'Ocurrio un error inesperado de conexión por favor recargue su navegador nuevamente.'\n        }\n        Swal.fire({\n            title: 'Atención',\n            text: messg.errors,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, recargar de nuevo'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n\n            }\n        })\n        if (response !== \"TypeError: Failed to fetch\") {\n            throw messg;\n        }\n        throw messg;\n\n    }\n};\n\nexport const generalErrorApi = response => {\n    throw response\n};","\n/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://johnAlejandro.com\n* link Api\n* http://coysa.herokuapp.com/api/\n*/\n\n\nexport const connection = () => {\n\n    const host = window.location.host\n    let URL = null;\n    const API_TOKEN = localStorage.getItem('token');\n\n    if (host === \"localhost:3000\") {\n        URL = \"http://localhost/coysa/public/api/\";\n    }\n    if (host === \"johnssther.github.io\") {\n        URL = \"http://coysa.herokuapp.com/api/\";\n    }\n    if (host === \"http://159.65.226.161:3000\") {\n        URL = \"http://localhost/coysa/public/api/\";\n    }\n\n    return {\n        URL: URL,\n        API_TOKEN: API_TOKEN\n    }\n};\n","export const setConfiguracion = payload => {\n    return {\n        type: 'SET_CONFIGURACION',\n        payload\n    }\n}","export const setPersonalexpense = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSE',\n        payload\n    }\n}\n\nexport const setPersonalexpenses = payload => {\n    return {\n        type: 'SET_PERSONALEXPENSES',\n        payload\n    }\n}","export const setRevenueIndex = payload => {\n    return {\n        type: 'SET_REVENUE_INDEX',\n        payload\n    }\n}\n\nexport const setRevenueStore = payload => {\n    return {\n        type: 'SET_REVENUE_STORE',\n        payload\n    }\n}\n\nexport const setRevenueShow = payload => {\n    return {\n        type: 'SET_REVENUE_SHOW',\n        payload\n    }\n}\n\nexport const setRevenueUpdate = payload => {\n    return {\n        type: 'SET_REVENUE_UPDATE',\n        payload\n    }\n}\n\nexport const setRevenueDelete = payload => {\n    return {\n        type: 'SET_REVENUE_DELETE',\n        payload\n    }\n}","import * as configuracion from './configuracion'\nimport * as personalexpenses from './personlexpenses'\nimport * as expensestype from './expensestype'\nimport * as revenues from './revenues'\n\nexport const actions = {\n    configuracion,\n    personalexpenses,\n    expensestype,\n    revenues,\n}","export const setExpensestype = payload => {\n    return {\n        type: 'SET_EXPENSES_TYPE',\n        payload\n    }\n}","\nimport { connection } from '../conection';\n\nclass ApiTypeExpense {\n    constructor() {\n        this.URL = connection().URL;\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //index\n    getExpensesType() {\n        return fetch(`${this.URL}tipogastos?api_token=${this.API_TOKEN}&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    //store\n    /* Expense */\n    saveExpenseType(data) {\n        console.log(data, 'joh');\n\n        // B. Guardar los gastos\n        return fetch(`${this.URL}tipogastos`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                tipogastos_name: data.tipogastos_name,\n                tipogastos_active: data.tipogastos_active,\n                tipogastos_usuario: data.tipogastos_usuario,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n\n\n}\nexport default new ApiTypeExpense();\n","//Llamadas al api\nimport API from '../../api/typeexpense/api';\nimport { handleErrors } from '../../utils/errors';\n\n//redux\nimport { actions } from '../../redux/actions/index';\nimport { store } from '../../store';\n\nexport const getExpensesType = async () => {\n    try {\n        const expensestypes = await API.getExpensesType();\n        store.dispatch(actions.expensestype.setExpensestype(expensestypes))\n    } catch (e) {\n        console.log('Ha ocurrido un error');\n        console.log(e);\n        handleErrors(e)\n    }\n}\n\n//store\nexport const createExpenseType = async (data) => {\n    try {\n        const createExpense = await API.saveExpenseType(data);\n        console.log(createExpense);\n    } catch (e) {\n        handleErrors(e)\n    }\n}","import React, { useState } from 'react';\nimport {\n    Container,\n    Alert\n} from 'reactstrap';\nimport Errors from '../components/error'\n\nconst Main = (props) => {\n    const { children, success } = props;\n    \n    const [visible, setVisible] = useState(true);\n    const onDismiss = () => setVisible(false);\n\n    return (\n        <div>\n            {/* {success.success === false ? null :\n                <Alert className=\"bg-danger\" isOpen={visible}>\n                    <b>Error: {success.error}</b><br></br>\n                    <b>{success.error === 'Error de conexion' ? 'Ocurrio un error inesperado al momento de intetar establecer conexión por favor recargue su navegador nuevamente.':''}  </b><br></br>\n                </Alert>\n            } */}\n            {/* <Errors text={success} /> */}\n            {children}\n        </div>\n    );\n};\n\nexport default Main","\nimport { connection } from '../conection';\n\nclass ApiRevenue {\n    constructor() {\n        this.URL = connection().URL;\n        this.API_TOKEN = localStorage.getItem('token');\n        this.USER = JSON.parse(localStorage.getItem('auth')).id;\n    }\n\n    //index\n    index() {\n        return fetch(`${this.URL}revenues?api_token=${this.API_TOKEN}&user_id=${this.USER}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    //store\n    /* Expense */\n    store(data) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}revenues`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                revenue_dt: data.revenue_dt,\n                revenue_name: data.revenue_name,\n                revenue_amount: data.revenue_amount,\n                revenue_description: data.revenue_description,\n                revenue_saving_percentaje: data.revenue_saving_percentaje,\n                revenue_user: this.USER,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    /* Expense */\n    update(data) {\n        console.log(data);\n\n        // B. Guardar los revenues\n        return fetch(`${this.URL}revenues/${data.id}`, {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                revenue_dt: data.revenue_dt,\n                revenue_name: data.revenue_name,\n                revenue_amount: data.revenue_amount,\n                revenue_description: data.revenue_description,\n                revenue_saving_percentaje: data.revenue_saving_percentaje,\n                revenue_user: this.USER,\n            }),\n\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    // 4. Show Expense\n    show(id) {\n        return fetch(`${this.URL}revenues/${id}?api_token=${this.API_TOKEN}&user_id=${this.USER}`)\n\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n    // 5. Elimina los gastos\n    // gastos/85\n    delete(id) {\n        // B. Guardar los gastos\n        return fetch(`${this.URL}revenues/${id}?api_token=${this.API_TOKEN}`, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            return response.json();\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n\n\n\n}\nexport default new ApiRevenue();\n","//Llamadas al api\nimport ApiRevenue from '../../api/revenues/revenues';\nimport { handleErrors, generalErrorApi } from '../../utils/errors';\n\n//redux\nimport { actions } from '../../redux/actions/index';\nimport { store } from '../../store';\n\n//index\nexport const indexRevenue = async () => {\n    try {\n        const revenues = await ApiRevenue.index();\n        store.dispatch(actions.revenues.setRevenueIndex(revenues))\n        return true;\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//store\nexport const storeRevenue = async (data) => {\n    try {\n        const response = await ApiRevenue.store(data);\n        \n        if(response.success === false) {\n            generalErrorApi(response)\n        } else {\n            return response;\n        }\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n//update\nexport const updateRevenue = async (data) => {\n    try {\n        const response = await ApiRevenue.update(data);\n        \n        if(response.success === false) {\n            generalErrorApi(response)\n        } else {\n            return response;\n        }\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//show\nexport const showRevenue = async (data) => {\n    try {\n        const response = await ApiRevenue.show(data);\n        console.log('show: ', response);\n        // await store.dispatch(actions.personalexpenses.setPersonalexpense(showExpense))\n        return true\n    } catch (e) {\n        handleErrors(e)\n    }\n}\n\n//delete\nexport const deleteRevenue = async (data) => {\n    try {\n        const response = await ApiRevenue.delete(data);\n        console.log(response);\n        return true\n    } catch (e) {\n        handleErrors(e)\n    }\n}","import React from 'react';\nimport './loading.css';\nimport Swal from 'sweetalert2'\n\n\nfunction Loading() {\n\n    return (\n        <>\n            <div className=\"container\">\n\n                <div className=\"row\">\n                    <div className=\"col-md-3 offset-md-4\">\n                        <div className=\"container center-block\">\n\n                            <div className=\"lds-facebook\">\n                                <div></div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                            <h4>Cargando...</h4>\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default Loading;"],"sourceRoot":""}