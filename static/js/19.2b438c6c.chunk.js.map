{"version":3,"sources":["views/Pages/Register/Register.js","utils/validateForms.js","api/api.js"],"names":["Register","event","target","name","value","length","console","log","props","state","username","email","password","password_confirmation","name_error","errors_example","validateForm","bind","registerUser","key","this","setState","data","valid_email","test","minimo_name","minimo_username","minimo_password","validForm","API","history","push","className","Container","Row","Col","md","lg","xl","Card","CardBody","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","placeholder","autoComplete","onChange","Button","color","block","onClick","Component","Api","host","window","location","URL","API_TOKEN","localStorage","getItem","userLogin","passwordLogin","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","catch","error","api_token","gasto","cantidad","precio_unidad","precioUnidad","precio_total","precioTotal","fecha","Fecha","user_id","id_usuario","tipogasto_id","URLactual","parse","id"],"mappings":"2WAQMA,GCmBS,I,0GAnBOC,GAEd,OADUA,EAAMC,OAAOC,MAEnB,IAAK,OACD,OAAIF,EAAMC,OAAOE,MAAMC,OAAS,GACd,sCAAkCJ,EAAMC,OAAOE,MAAMC,OAArD,eAGR,GAGd,IAAK,SACDC,QAAQC,IAAI,oB,kBDX1B,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXN,KAAM,GACNO,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,sBAAuB,GAEvBC,WAAY,GACZC,eAAe,IAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAbH,E,iFAiBjBX,QAAQC,IAAI,wB,mCAIDN,GACX,IAAIkB,EAAMlB,EAAMC,OAAOC,KACnBC,EAAQH,EAAMC,OAAOE,MACzB,OAAQe,GACN,IAAK,OACHC,KAAKC,SAAS,CAAElB,KAAMC,IACtB,MACF,IAAK,WACHgB,KAAKC,SAAS,CAAEX,SAAUN,IAC1B,MACF,IAAK,QACHgB,KAAKC,SAAS,CAAEV,MAAOP,IACvB,MACF,IAAK,WACHgB,KAAKC,SAAS,CAAET,SAAUR,IAC1B,MACF,IAAK,wBACHgB,KAAKC,SAAS,CAAER,sBAAuBT,O,qCAI7B,IAAD,OAETkB,EAAO,CACTnB,KAAMiB,KAAKX,MAAMN,KACjBO,SAAUU,KAAKX,MAAMC,SACrBC,MAAOS,KAAKX,MAAME,MAClBC,SAAUQ,KAAKX,MAAMG,SACrBC,sBAAuBO,KAAKX,MAAMI,wBAmCZ,IAhCN,WAEhB,IAEIU,IAFQ,kEAEYC,KAAKF,EAAKX,OAC9Bc,EAAcH,EAAKnB,KAAKE,OAAS,EACjCqB,EAAkBJ,EAAKZ,SAASL,OAAS,EACzCsB,EAAkBL,EAAKV,SAASP,OAAS,EAG7C,OAAKoB,EAIAC,EAIAH,EAIAI,KAdgBL,EAAKV,WAAaU,EAAKT,yBAmB1C,EAAKQ,SAAS,CAAEN,eAAgB,oCACzB,IALP,EAAKM,SAAS,CAAEN,eAAgB,qDACzB,IALP,EAAKM,SAAS,CAAEN,eAAgB,qBACzB,IALP,EAAKM,SAAS,CAAEN,eAAgB,iCACzB,IALP,EAAKM,SAAS,CAAEN,eAAgB,gCACzB,GAoBPa,KACFR,KAAKC,SAAS,CAAEN,eAAgB,oCAChCc,IAAIX,aAAaI,GACjBF,KAAKZ,MAAMsB,QAAQC,KAAK,a,+BAO1B,OACE,yBAAKC,UAAU,mCACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKF,UAAU,0BACb,kBAACG,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpB,kBAACC,EAAA,EAAD,CAAMP,UAAU,QACd,kBAACQ,EAAA,EAAD,CAAUR,UAAU,OAClB,kBAACS,EAAA,EAAD,KACE,0CACA,uBAAGT,UAAU,eAFf,iBAGE,kBAACU,EAAA,EAAD,CAAYV,UAAU,QACpB,kBAACW,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGb,UAAU,gBAGjB,kBAACc,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,oBAAoBC,aAAa,OAAO9C,KAAK,OAAO+C,SAAU9B,KAAKJ,gBAEpG,2BAAII,KAAKX,MAAMK,YACf,kBAAC4B,EAAA,EAAD,CAAYV,UAAU,QACpB,kBAACW,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGb,UAAU,gBAGjB,kBAACc,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,qBAAqBC,aAAa,WAAW9C,KAAK,WAAW+C,SAAU9B,KAAKJ,gBAE7G,kBAAC0B,EAAA,EAAD,CAAYV,UAAU,QACpB,kBAACW,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,WAEF,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,gCAA6BC,aAAa,QAAQ9C,KAAK,QAAQ+C,SAAU9B,KAAKJ,gBAE/G,kBAAC0B,EAAA,EAAD,CAAYV,UAAU,QACpB,kBAACW,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGb,UAAU,gBAGjB,kBAACc,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,wBAAqBC,aAAa,eAAe9C,KAAK,WAAW+C,SAAU9B,KAAKJ,gBAErH,kBAAC0B,EAAA,EAAD,CAAYV,UAAU,QACpB,kBAACW,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGb,UAAU,gBAGjB,kBAACc,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,2BAAwBC,aAAa,eAAe9C,KAAK,wBAAwB+C,SAAU9B,KAAKJ,gBAErI,kBAACmC,EAAA,EAAD,CAAQC,MAAM,UAAUC,OAAK,EAACC,QAASlC,KAAKF,cAA5C,eACA,2BAAKE,KAAKX,MAAMM,2B,GAjJbwC,cAuKRvD,a,uDEvKTwD,E,WACF,aAAe,oBACX,IAAIC,EAAOC,OAAOC,SAASF,KACd,mBAATA,IACArC,KAAKwC,IAAM,sCAEF,yBAATH,IACArC,KAAKwC,IAAM,mCAGfxC,KAAKyC,UAAYC,aAAaC,QAAQ,S,oDAIlCC,EAAWC,GACf,OAAOC,MAAM,GAAD,OAAI9C,KAAKwC,IAAT,SAAqB,CAC7BO,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB9D,SAAUsD,EACVpD,SAAUqD,MAEfQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC1BF,MAAK,SAACG,GACH,OAAOA,KAEVC,OAAM,SAAAC,GACH,MAAMA,O,mCAILxD,GACT,OAAO4C,MAAM,GAAD,OAAI9C,KAAKwC,IAAT,YAAwB,CAChCO,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBrE,KAAMmB,EAAKnB,KACXQ,MAAOW,EAAKX,MACZD,SAAUY,EAAKZ,SACfE,SAAUU,EAAKV,SACfC,sBAAuBS,EAAKT,0BAEjC4D,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC1BF,MAAK,SAACG,GACH,OAAOA,KAEVC,OAAM,SAAAC,GACH,MAAMA,O,mCAILxD,GAET4C,MAAM,GAAD,OAAI9C,KAAKwC,IAAT,UAAsB,CAEvBO,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBO,UAAW3D,KAAKyC,UAChBmB,MAAO1D,EAAK0D,MACZC,SAAU3D,EAAK2D,SACfC,cAAe5D,EAAK6D,aACpBC,aAAc9D,EAAK+D,YACnBC,MAAOhE,EAAKiE,MACZC,QAASlE,EAAKmE,WACdC,aAAcpE,EAAKoE,iBAGxBjB,MAAK,SAACC,GACL,OAAOA,EAASC,UAGfE,OAAM,SAAAC,GACH,MAAMA,O,oCAMd,IAAIa,EAAYjC,OAAOC,SAEvB,OADArD,QAAQC,IAAIoF,EAAW,MAChBzB,MAAM,GAAD,OAAI9C,KAAKwC,IAAT,4BAAiCxC,KAAKyC,UAAtC,oBAA4DU,KAAKqB,MAAM9B,aAAaC,QAAQ,SAAS8B,KAC5GpB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,OAAOA,KAEVC,OAAM,SAACC,GACJ,MAAMA,O,sCAOd,OAAOZ,MAAM,GAAD,OAAI9C,KAAKwC,IAAT,gCAAqCxC,KAAKyC,UAA1C,oBAAgEU,KAAKqB,MAAM9B,aAAaC,QAAQ,SAAS8B,KAChHpB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,OAAOA,KAEVC,OAAM,SAACC,GACJ,MAAMA,S,KAQP,QAAItB","file":"static/js/19.2b438c6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button, Card, CardBody, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row,\n\n} from 'reactstrap';\nimport API from '../../../api/api'\nimport validateForm from '../../../utils/validateForms'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      //errors\n      name_error: '',\n      errors_example:'',\n    }\n    this.validateForm = this.validateForm.bind(this);\n    this.registerUser = this.registerUser.bind(this);\n  }\n  componentDidMount() {\n    // API.registerUser()\n    console.log('usuario registrado');\n\n  }\n\n  validateForm(event) {\n    let key = event.target.name\n    let value = event.target.value\n    switch (key) {\n      case 'name':\n        this.setState({ name: value })\n        break;\n      case 'username':\n        this.setState({ username: value })\n        break;\n      case 'email':\n        this.setState({ email: value })\n        break;\n      case 'password':\n        this.setState({ password: value })\n        break;\n      case 'password_confirmation':\n        this.setState({ password_confirmation: value })\n        break;\n    }\n  }\n  registerUser() {\n\n    let data = {\n      name: this.state.name,\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirmation: this.state.password_confirmation,\n    }\n\n    const validForm = () => {\n      //validacion de correo\n      let regex = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n      let valid_email = regex.test(data.email) ? true : false;\n      let minimo_name = data.name.length > 4 ? true : false\n      let minimo_username = data.username.length > 4 ? true : false\n      let minimo_password = data.password.length > 7 ? true : false\n      let valid_password = data.password === data.password_confirmation ? true : false\n\n      if (!minimo_name) {\n        this.setState({ errors_example: 'Nombre minimo 4 caracteres'});\n        return false\n      }\n      if (!minimo_username) {\n        this.setState({ errors_example: 'Usuario minimo 4 caracteres'});\n        return false\n      }\n      if (!valid_email) {\n        this.setState({ errors_example: 'Correo invalido'});\n        return false\n      }\n      if (!minimo_password) {\n        this.setState({ errors_example: 'La contraceña debe tener minimo 8 caracteres'});\n        return false\n      }\n      if (!valid_password) {\n        this.setState({ errors_example: 'La contraceñas con considen'});\n        return false\n      }\n      return true\n    }\n    if (validForm(data) === true) {\n      this.setState({ errors_example: 'Campos validos, puede continuar'});\n      API.registerUser(data)\n      this.props.history.push('/login')\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form>\n                    <h1>Registrate</h1>\n                    <p className=\"text-muted\"></p>Crea tu cuenta\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-user\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" placeholder=\"Ingresa tu Nombre\" autoComplete=\"name\" name='name' onChange={this.validateForm} />\n                    </InputGroup>\n                    <p>{this.state.name_error}</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-user\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" placeholder=\"Ingresa un usuario\" autoComplete=\"username\" name='username' onChange={this.validateForm} />\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>@</InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" placeholder=\"Ingresa correo electrónico\" autoComplete=\"email\" name='email' onChange={this.validateForm} />\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"password\" placeholder=\"Ingresa Contraceña\" autoComplete=\"new-password\" name='password' onChange={this.validateForm} />\n                    </InputGroup>\n                    <InputGroup className=\"mb-4\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"password\" placeholder=\"Repita tu  contraceña\" autoComplete=\"new-password\" name='password_confirmation' onChange={this.validateForm} />\n                    </InputGroup>\n                    <Button color=\"success\" block onClick={this.registerUser}>Registrarme</Button>\n                    <p>{ this.state.errors_example }</p>\n                  </Form>\n                </CardBody>\n                {/* <CardFooter className=\"p-4\">\n                  <Row>\n                    <Col xs=\"12\" sm=\"6\">\n                      <Button className=\"btn-facebook mb-1\" block><span>facebook</span></Button>\n                    </Col>\n                    <Col xs=\"12\" sm=\"6\">\n                      <Button className=\"btn-twitter mb-1\" block><span>twitter</span></Button>\n                    </Col>\n                  </Row>\n                </CardFooter> */}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","/**\n*Metodos validate forms\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* \n*/\nclass ValidateForms {\n\n    formRegisterUsers(event) {\n        let key = event.target.name\n        switch (key) {\n            case 'name':\n                if (event.target.value.length < 12) {\n                    let name_error = `El nombre debe tener minimo ${event.target.value.length} caracteres`\n                    return name_error\n                } else {\n                    return ``\n                }\n                break;\n            case 'Martes':\n                console.log('martesss...');\n                break;\n            default:\n                break;\n        }\n    }\n}\nexport default new ValidateForms();\n","/**\n*Peticiones api\n* @author John Alejandro || @Johnssther\n* @link http://JohnAlejandro.com\n* link Api\n* http://104.236.57.82/accesspark/public/api/login\n*/\n\nclass Api {\n    constructor() {\n        let host = window.location.host\n        if (host === \"localhost:3000\") {\n            this.URL = \"http://localhost/coysa/public/api/\";\n        }\n        if (host === \"johnssther.github.io\") {\n            this.URL = \"http://coysa.herokuapp.com/api/\";\n        }\n\n        this.API_TOKEN = localStorage.getItem('token');\n    }\n\n    //1. Login\n    onLogin(userLogin, passwordLogin) {\n        return fetch(`${this.URL}login`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userLogin,\n                password: passwordLogin,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n    //1. Register users\n    registerUser(data) {\n        return fetch(`${this.URL}register`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirmation: data.password_confirmation,\n            }),\n        }).then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson\n            })\n            .catch(error => {\n                throw error;\n            });\n    }\n\n    saveExpenses(data) {\n        // B. Guardar los gastos\n        fetch(`${this.URL}gastos`, {\n\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                api_token: this.API_TOKEN,\n                gasto: data.gasto,\n                cantidad: data.cantidad,\n                precio_unidad: data.precioUnidad,\n                precio_total: data.precioTotal,\n                fecha: data.Fecha,\n                user_id: data.id_usuario,\n                tipogasto_id: data.tipogasto_id,\n            }),\n\n        }).then((response) => {\n            return response.json();\n\n        })\n            .catch(error => {\n                throw error;\n            });\n    }\n    // 3. Obtener todos los gastos\n\n    getExpenses() {\n        var URLactual = window.location;\n        console.log(URLactual, 'oo');\n        return fetch(`${this.URL}gastos?api_token=${ this.API_TOKEN }&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n    // 4. Obtiene los tipos de gastos\n\n    getTipogastos() {\n        return fetch(`${this.URL}tipogastos?api_token=${ this.API_TOKEN }&user_id=${JSON.parse(localStorage.getItem('auth')).id}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                throw error;\n            });\n    }\n\n\n\n} // close class\n//Total peticiones 2 : ??\nexport default new Api();\n"],"sourceRoot":""}